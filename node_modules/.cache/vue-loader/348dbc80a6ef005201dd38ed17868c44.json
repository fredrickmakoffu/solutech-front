{"remainingRequest":"/home/october/Documents/code/kipekee/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/kipekee/front/src/components/AutoList.vue?vue&type=style&index=0&id=a105a41a&lang=scss&scoped=true","dependencies":[{"path":"/home/october/Documents/code/kipekee/front/src/components/AutoList.vue","mtime":1640781087294},{"path":"/home/october/Documents/code/kipekee/front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/kipekee/front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/kipekee/front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/kipekee/front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/kipekee/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee/front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9sYXlvdXQvX2xpc3RzLnNjc3MnOwo="},{"version":3,"sources":["/home/october/Documents/code/kipekee/front/src/components/AutoList.vue"],"names":[],"mappings":";IA8HI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/october/Documents/code/kipekee/front/src/components/AutoList.vue","sourceRoot":"","sourcesContent":["<template>\n    <section-title v-if=\"title.status == true\" :title=title.title :actions=title.actions></section-title>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"input-group mb-3\">\n                <status v-model:status_data=status_data></status>\n\n                <form action=\"#\" @submit.prevent=\"fetchResults()\" style=\"width: inherit\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control search\" v-model=\"search\" placeholder=\"Search through system.\" aria-label=\"search\" aria-describedby=\"search-submit\">\n\n                        <span class=\"input-group-text search-icon\" id=\"search-submit\">\n                            <button class=\"btn btn-transparent\" type=\"submit\">\n                                <font-awesome-icon class=\"icon\" :icon=\"['fa', 'search']\" /> \n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    \n    <div id=\"tables\" class=\"data-lists row\">\n        <div class=\"col-md-12\">\n            <small class=\"text-muted fw-bold\">{{ totals }} total records</small>\n            <small class=\"text-muted float-end fw-bold\">{{ totals }} records showing</small>\n            \n            <table id=\"table\" class=\"table table-striped mt-2\">\n                <thead class=\"table-dark\">\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th v-for=\"(header, index) in headers\" :key=\"index\" scope=\"col\">\n                            <span class=\"text-capitalize\">{{ header }}</span>\n                        </th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(item, index) in data\" :key=\"index\">\n                        <th scope=\"row\">{{ getIndex(index) }}</th>\n                        <td v-for=\"(header, index) in headers\" :key=\"index\">{{\n                            item[header] }}</td>\n\n                        <td class=\"dropdown\">\n                            <font-awesome-icon :icon=\"['fas', 'ellipsis-h']\" class=\"dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></font-awesome-icon>\n\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                                <li v-for=\"({name, action_url, type}, index) in all_screens[screen-1].actions\" :key=\"index\">\n                                    <a class=\"dropdown-item\" v-if=\"type == 'api'\" @click=\"autoAPI(action_url, item['id'], action_url.message, $event.currentTarget, 'list')\" style=\"cursor: pointer\">{{ name }}</a>\n\n                                    <a class=\"dropdown-item\" v-if=\"type == 'modal'\" style=\"cursor: pointer\" @click=\"setListData(item, action_url)\">{{ name }}ss</a>\n                                </li>\n                            </ul>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    <div id=\"cards\" class=\"data-lists row mb-3\">\n        <div class=\"col-md-12\">\n            <small class=\"text-muted fw-bold\">+{{ totals }} total</small>\n            <small class=\"text-muted float-end fw-bold\">{{ totals }} records found.</small>\n        </div>\n\n        <div class=\"col-md-12 mt-3\" v-for=\"(item, index) in data\" :key=\"index\">\n            <div class=\"card mb-2 border-0\">\n                <div class=\"card-body pb-0\">\n                    <p class=\"text-dark fw-bold\">{{ index + 1 }}. </p>\n                    <p class=\"text-dark mb-3\" v-for=\"(header, index) in headers\" :key=\"index\"> <span class=\"fw-bold text-uppercase\">{{ header }}: </span> {{ item[header] }}</p>\n                </div>\n                <div class=\"card-footer border-0 bg-white\">\n                    <span v-for=\"({name, action_url, type}, index) in all_screens[screen-1].actions\" :key=\"index\" >\n                        <button class=\"btn button default btn-sm mt-1\" v-if=\"type == 'modal'\" @click=\"setListData(item, action_url)\">\n                            <span class=\"ms-2 me-2\">{{ name }}</span>\n                        </button>  \n\n                        <button class=\"btn btn-secondary button btn-sm mt-1\" v-if=\"type =='api'\" @click=\"autoAPI(action_url, item['id'], action_url.message, $event.currentTarget, 'cards')\"> \n                            <span class=\"ms-2 me-2\">{{ name }}</span>\n\n                            <font-awesome-icon class=\"ms-2 icon-loading d-none\" :icon=\"['fas', 'spinner']\"></font-awesome-icon>\n                            \n                            <font-awesome-icon class=\"ms-2 icon-success d-none\" :icon=\"['fas', 'check-circle']\"></font-awesome-icon>\n\n                            <font-awesome-icon class=\"ms-2 icon-failure d-none\" :icon=\"['fas', 'times-circle']\"></font-awesome-icon>\n                        </button>         \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row navigation\">\n        <div class=\"col-12 d-flex\">\n            <div class=\"mx-auto\">\n                <button class=\"btn secondary btn-sm me-2\" id=\"start\" @click=\"start()\" :disabled=\"hidePrevious\">\n                    <span class=\"mx-1\">Start <font-awesome-icon class=\"icon ms-2\" :icon=\"['fa', 'step-backward']\" /></span>\n                </button>\n\n                <button class=\"btn secondary btn-sm me-2\" id=\"previous\" @click='previous()' :disabled=\"hidePrevious\">\n                    <font-awesome-icon class=\"icon me-2\" :icon=\"['fa', 'caret-left']\" /> Previous\n                </button>\n\n                <span>\n                    ||\n                </span>\n\n                <button class=\"btn default btn-sm ms-2 me-2\" id=\"next\" @click='next()' :disabled=\"hideNext\">\n                    Next\n                    <font-awesome-icon class=\"icon ms-2\" :icon=\"['fa', 'caret-right']\" />\n                </button>\n\n                <button class=\"btn default btn-sm me-2\" id=\"end\" @click=\"end()\" :disabled=\"hideNext\">\n                    <span class=\"mx-1\">End <font-awesome-icon class=\"icon ms-2\" :icon=\"['fa', 'step-forward']\" /></span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <form-component></form-component>\n\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../assets/scss/layout/_lists.scss';\n</style>\n\n<script>\nimport FormComponent from '../components/Form';\nimport SectionTitle from'../components/SectionTitle';    \nimport Status from '../components/Status';\nimport {Modal} from 'bootstrap'\nimport statusButtons from '../mixins/statusButtons';\n\nexport default {\n    name: 'AutoList',\n    mixins: [statusButtons],\n    props: {\n        title: {\n            type: Object,\n            required: true\n        },\n        url: {\n            type: String,\n            required: true\n        },\n        all_screens: {\n            required: true,\n            type: Object\n        },\n        screen: {\n            required: true,\n            type: Number\n        },\n        list_data: {\n            required: true,\n            type: Object\n        }\n    },\n    components: {\n        FormComponent,\n        SectionTitle,    \n        Status\n    },\n    mounted() {\n        this.getDatabyPage()\n    },\n    data (){\n        return {\n            page: 0,\n            size: 25,\n            data: [],\n            search: null,\n            totals: 0,\n            headers: [],\n            hidePrevious: true,\n            hideNext: false,\n            status_data: {\n                \"success\": false,\n                \"success_message\": 'Form Submission was successful!',\n                \"error\": false,\n                \"error_message\": 'There are some errors.',\n                \"loading\": false\n            },\n            modalElem: null,\n            active_api: null,\n            active_item: null,\n            filter_url: null\n        }\n    },\n    watch: {\n        url: function() {\n            this.getDatabyPage()\n            this.hidePrevious = true\n            this.hideNext = false\n            this.page = 0\n            this.filterUrl()\n        }\n    },\n    methods: {\n        getDatabyPage() {\n            this.axios.get(this.url + '?size=' + this.size + '&page=' + this.page).then((response) => {\n                this.data = response.data.data\n                this.headers = response.data.headers\n                this.totals = response.data.totals\n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n            }).catch((error) => {\n                this.error = error\n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n            })\n        },\n        setListData(data, action_url) {\n            this.$store.dispatch(\"getModalList\", data)\n            this.modalElem = new Modal(document.getElementById(action_url))\n            this.modalElem.show()\n        },\n        autoAPI(url, id, message, event, display_type) {\n            this.status_data.loading = true\n\n            if(display_type == 'cards') {\n                this.loadingButton(event)\n            }\n\n            this.axios[url.type](url.url + id).then(() => {\n                this.status_data.loading = false\n                this.status_data.error = false\n                this.status_data.success = true\n                this.status_data.success_message = message.success\n\n                if(display_type == 'cards') {\n                    this.successButton(event)\n                    setTimeout(() => (this.defaultButton(event, 'success')), 2000)\n                }\n\n                setTimeout(() => (this.status_data.success = false), 2000)\n                this.getDatabyPage() \n            }).catch((error) => {\n                this.status_data.loading = false\n                this.status_data.error = true\n                this.status_data.success = false\n                this.status_data.error_message = message.error\n                \n                if(display_type == 'cards') {\n                    this.errorButton(event)\n                }\n\n                console.log(error);\n            })\n        },\n        next() {\n            if((this.page * this.size) < this.totals) {\n                this.page = this.page + 1\n                this.getDatabyPage()\n            }\n\n            if(this.page > 0) {\n                this.hidePrevious = false\n\n                document.getElementById('start').classList.remove('secondary')\n                document.getElementById('start').classList.add('default')\n\n                document.getElementById('previous').classList.remove('secondary')\n                document.getElementById('previous').classList.add('default')\n            }\n\n            if((((this.page+1) * this.size) + this.size) > this.totals) {\n                this.hideNext = true\n\n                document.getElementById('end').classList.remove('default')\n                document.getElementById('end').classList.add('secondary')\n\n                document.getElementById('next').classList.remove('default')\n                document.getElementById('next').classList.add('secondary')\n            }\n        },\n        previous() {\n            if(this.page >= 0) {\n                this.page = this.page - 1\n                this.getDatabyPage()\n            }\n            \n            if(this.page == 0) {\n                this.hidePrevious = true\n\n                document.getElementById('start').classList.remove('default')\n                document.getElementById('start').classList.add('secondary')\n\n                document.getElementById('previous').classList.remove('default')\n                document.getElementById('previous').classList.add('secondary')\n            }\n\n            if((((this.page) * this.size) + this.size) < this.totals) {\n                this.hideNext = false\n\n                document.getElementById('end').classList.remove('secondary')\n                document.getElementById('end').classList.add('default')\n\n                document.getElementById('next').classList.remove('secondary')\n                document.getElementById('next').classList.add('default')\n            }\n                 \n        },\n        start() {\n            this.page = 0\n            this.getDatabyPage()\n\n            if(this.hideNext == true) {\n                this.hideNext = false\n\n                document.getElementById('end').classList.remove('secondary')\n                document.getElementById('end').classList.add('default')\n\n                document.getElementById('next').classList.remove('secondary')\n                document.getElementById('next').classList.add('default')\n            }\n\n            if(this.hidePrevious == false) {\n                this.hidePrevious = true\n\n                document.getElementById('start').classList.remove('default')\n                document.getElementById('start').classList.add('secondary')\n\n                document.getElementById('previous').classList.remove('default')\n                document.getElementById('previous').classList.add('secondary')                \n            }\n        },\n        end() {\n            this.page = Math.floor(this.totals/this.size)-1\n            this.getDatabyPage()\n\n            if(this.hideNext == false) {\n                this.hideNext = true\n\n                document.getElementById('end').classList.remove('default')\n                document.getElementById('end').classList.add('secondary')\n\n                document.getElementById('next').classList.remove('default')\n                document.getElementById('next').classList.add('secondary')\n            }\n\n            if(this.hidePrevious == true) {\n                this.hidePrevious = false\n\n                document.getElementById('start').classList.remove('secondary')\n                document.getElementById('start').classList.add('default')\n\n                document.getElementById('previous').classList.remove('secondary')\n                document.getElementById('previous').classList.add('default')                \n            }\n        }, \n        filterUrl() {\n            this.filter_url = 'api/filter-' + this.url.split('/')[1]\n        },\n        fetchResults() {\n            this.status_data.loading = true\n\n            let data = {\n                name: this.search\n            }\n\n            this.axios.post(this.filter_url  + '?size=' + this.size + '&page=' + this.page, data).then((response) => {\n                this.status_data.loading = false\n                this.status_data.success = true\n                this.status_data.success_message = 'Success'\n                this.status_data.error = false\n\n                this.data = response.data.data\n                this.headers = response.data.headers\n                this.totals = response.data.totals\n\n                setTimeout(() => {\n                    this.status_data.success = false\n                }, 1000);\n\n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n            }).catch((error) => {\n                this.status_data.loading = false\n                this.status_data.success = false\n                this.status_data.error = true\n                this.status_data.error = error.response.data\n\n                setTimeout(() => {\n                    this.status_data.error = false\n                }, 1000);\n                \n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n                console.log(error)\n            })\n        },    \n        getIndex(index) {\n            return ((this.page) * this.size) + index + 1\n        },      \n    }\n}\n</script>"]}]}