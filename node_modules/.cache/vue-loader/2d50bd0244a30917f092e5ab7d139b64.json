{"remainingRequest":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/kipekee-front/src/components/Status.vue?vue&type=style&index=0&id=fcff31d0&lang=scss&scoped=true","dependencies":[{"path":"/home/october/Documents/code/kipekee-front/src/components/Status.vue","mtime":1630502800027},{"path":"/home/october/Documents/code/kipekee-front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/kipekee-front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/kipekee-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAuZmFkZS1lbnRlci1hY3RpdmUsCiAgICAuZmFkZS1sZWF2ZS1hY3RpdmUgewogICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2U7CiAgICB9CgogICAgLmZhZGUtZW50ZXItZnJvbSwKICAgIC5mYWRlLWxlYXZlLXRvIHsKICAgIG9wYWNpdHk6IDA7CiAgICB9Cg=="},{"version":3,"sources":["/home/october/Documents/code/kipekee-front/src/components/Status.vue"],"names":[],"mappings":";IAkCI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACV","file":"/home/october/Documents/code/kipekee-front/src/components/Status.vue","sourceRoot":"","sourcesContent":["<template>\n    <!-- Error Message -->\n    <div class=\"container\">\n        <div class=\"row\">\n            <transition name=\"fade\">\n                <div v-if=\"status_data.success == true\" class=\"alert alert-dismissible fixed alert-success fade show\" role=\"alert\">\n                    <h6 class=\"text-start fw-bold text-uppercase\">  <font-awesome-icon class=\"icon me-2\" :icon=\"['fa', 'info-circle']\" /> Success! </h6>\n\n                    <p class=\"mb-0 pt-2\">{{ status_data.success_message }}</p>\n                    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"hideAlert()\"></button>\n                </div>\n            </transition>\n\n            <transition name=\"fade\">\n                <div v-if=\"status_data.error == true\" class=\"alert fixed alert-dismissible alert-danger fade show\" role=\"alert\">\n                    <h6 class=\"text-start fw-bold text-uppercase\">  <font-awesome-icon class=\"icon me-2\" :icon=\"['fa', 'info-circle']\" /> Error! </h6>\n\n                    <p class=\"mb-0 pt-2\"> {{ status_data.error_message }}</p>\n                    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"hideAlert()\"></button>\n                </div>\n            </transition>\n            \n            <transition name=\"fade\">\n                <div class=\"d-flex\" v-if=\"status_data.loading\">                      \n                    <h3 class=\"spinner-border spinner-border-sm fw-bold text-warning mx-auto mt-2\" role=\"status\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </h3> \n                </div> \n            </transition>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n    .fade-enter-active,\n    .fade-leave-active {\n    transition: opacity 0.5s ease;\n    }\n\n    .fade-enter-from,\n    .fade-leave-to {\n    opacity: 0;\n    }\n</style>\n\n<script>\nexport default {\n    name: 'Status',\n    props: {\n        status_data: {\n            type: Object,\n            required: true\n        },\n    },\n    methods: {\n        hideAlert() {\n            if(this.status_data.success == true) {\n                let status_data =  {\n                    \"success\": false,\n                    \"success_message\": this.status_data.success_message,\n                    \"error\": this.status_data.error,\n                    \"error_message\":this.status_data.error_message,\n                    \"loading\": false\n                }\n\n                this.$emit('update:status_data', status_data);\n\n            } else if(this.status_data.error == true) {\n                let status_data =  {\n                    \"success\": this.status_data.success,\n                    \"success_message\": this.status_data.success_message,\n                    \"error\": this.status_data.error,\n                    \"error_message\": false,\n                    \"loading\": false\n                }\n\n                this.$emit('update:status_data', status_data);\n            }\n        }\n    }\n}\n</script>"]}]}