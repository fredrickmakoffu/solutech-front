{"remainingRequest":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/solutech/front/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=scss","dependencies":[{"path":"/home/october/Documents/code/solutech/front/src/views/Login.vue","mtime":1648670283695},{"path":"/home/october/Documents/code/solutech/front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/solutech/front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/solutech/front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9iYXNlL19iYXNlLnNjc3MnOwogICAgQGltcG9ydCAnLi4vYXNzZXRzL3Njc3MvYmFzZS9fZm9udHMuc2Nzcyc7CiAgICBAaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9oZWxwZXJzL2JyZWFrcG9pbnRzLnNjc3MnOwoKICAgIC5jYXJkIHsKICAgICAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiKDAgMCAwIC8gMyUpCiAgICB9CgogICAgLmlucHV0LWdyb3VwIHsKICAgICAgICAuaW5wdXQtZ3JvdXAtdGV4dCB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNlZWU7CiAgICAgICAgfQoKICAgICAgICAuZm9ybS1jb250cm9sIHsKICAgICAgICAgICAgYmFja2dyb3VuZDogI2VlZTsKICAgICAgICB9CiAgICB9ICAKCiAgICAuZ3JhZGllbnQtcHJpbWFyeSB7CiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMjYuNDlkZWcsI2ZmOTIwMCwjZDUzNjkwKTsKICAgIH0gICAgIAogICAgCiAgICAuc3ZnLW1vYmlsZSB7CiAgICAgICAgZGlzcGxheTogbm9uZTsKCiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJzw9THBob25lJykgewogICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICB9CiAgICB9Cg=="},{"version":3,"sources":["/home/october/Documents/code/solutech/front/src/views/Login.vue"],"names":[],"mappings":";IA0EI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEjD,CAAC,CAAC,CAAC,CAAC,EAAE;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACxC;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpB;;QAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpB;IACJ;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;QAEb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB;IACJ","file":"/home/october/Documents/code/solutech/front/src/views/Login.vue","sourceRoot":"","sourcesContent":["<template>\n    <div id=\"wrapper\" class=\"bg-white pt-4\" v-if=\"!loading\">        \n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-xl-8 offset-xl-2 col-lg-8 col-md-8 offset-lg-2 offset-md-2\">\n\n                    <div class=\"d-flex\">\n                        <div class=\"text-left p-4 pb-2 pt-0\">\n                            <h3 class=\"text-uppercase text-primary fw-bold mb-1 mt-2\" style=\"letter-spacing: 1px\">Login</h3>                        \n                        </div>\n                    </div>\n\n                    <div class=\"container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <status v-model:status_data=status_data></status>\n                            </div>\n                        </div>\n                    </div>\n\n                    <form id=\"form\" action=\"#\" @submit.prevent=\"handleSubmit()\">\n                        <div class=\"border-bottom-0 p-4 pt-2\">\n                            <div class=\"form-row\">\n                                <label class=\"mb-2 fw-bold\" for=\"email\">Email</label>\n                                <div class=\"input-group\">\n                                    <span class=\"input-group-text border-right-0\" @click=\"seePassword()\">\n                                        <font-awesome-icon id=\"eye\" :icon=\"['fa', 'envelope']\" />\n                                    </span>\n\n                                    <input id=\"email\" type=\"email\" class=\"form-control no-border\" v-model=\"data.email\" placeholder=\"Enter your Email\" required>\n                                </div>\n                            </div>\n\n                            <div class=\"row mt-4\" id=\"password-row\">\n                                <label class=\"mb-2 fw-bold\" for=\"password\">Password</label>\n                                <div class=\"input-group\">\n                                    <span class=\"input-group-text\">\n                                        <font-awesome-icon id=\"lock\" :icon=\"['fa', 'lock']\" />\n                                    </span>\n\n                                    <input id=\"password\" type=\"password\" class=\"form-control\" v-model=\"data.password\" placeholder=\"Password\" autocomplete=\"new-password\" required>\n\n                                    <span class=\"input-group-text pe-4 ps-4\" style=\"cursor: pointer\" @click=\"seePassword()\">\n                                        <font-awesome-icon id=\"eye\" :icon=\"['fa', eye]\" />\n                                    </span>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <small v-if=\"errors.password\" class=\"text-burgundy\">{{ errors.password }}</small>\n                                    <small class=\"text-muted ms-auto\">\n                                        <router-link :to=\"'/forgot-password'\" class=\"text-primary fw-bold text-decoration-none float-end mt-2\">Forgot Password</router-link>\n                                    </small>\n                                </div>\n                            </div>\n\n                            <div class=\"row\" id=\"login\">\n                                <div class=\"col\">\n                                    <button class=\"btn bg-primary text-white btn-sm mt-4 w-100 text-uppercase fw-bold pt-2 pb-2\" type=\"submit\">\n                                        <span style=\"letter-spacing: 2px\">Login</span> <font-awesome-icon class=\"icon ms-1 me-1\" :icon=\"['fa', 'unlock']\" />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>  \n            </div>\n        </div>\n\n        <div class=\"container-fluid\">\n            <p class=\"text-center pt-4\">Don't have an account? <router-link :to=\"'/register'\" class=\"text-primary text-decoration-none\">Create One</router-link></p>\n        </div>\n    </div>\n</template>\n\n<style scoped lang=\"scss\">\n    @import '../assets/scss/base/_base.scss';\n    @import '../assets/scss/base/_fonts.scss';\n    @import '../assets/scss/helpers/breakpoints.scss';\n\n    .card {\n        box-shadow: 0 4px 8px rgb(0 0 0 / 3%)\n    }\n\n    .input-group {\n        .input-group-text {\n            background: #eee;\n        }\n\n        .form-control {\n            background: #eee;\n        }\n    }  \n\n    .gradient-primary {\n      background: linear-gradient(126.49deg,#ff9200,#d53690);\n    }     \n    \n    .svg-mobile {\n        display: none;\n\n        @include media('<=Lphone') {\n            display: block;\n        }\n    }\n</style>\n\n<script>\n    import Status from '../components/Status';\n\n    export default {\n        name: 'Login',\n        components: {\n            Status,\n        },\n        data() {\n            return {\n                data: {\n                    email: '',\n                    password: '',\n                },\n                status_data: {\n                    \"success\": false,\n                    \"success_message\": 'You\\'re in! Login is Successful!',\n                    \"error\": false,\n                    \"error_message\": 'There are some input errors.',\n                },\n                errors: [],\n                eye: 'eye',\n                loading: null\n            }\n        },\n        mounted() {\n            this.ifLoggedIn()\n        },\n        methods: {\n            ifLoggedIn() {\n                this.loading = true\n\n                if(localStorage.getItem('user')) {\n                    this.$router.push({name: 'Users'})\n                } else {\n                    this.loading = false\n                }\n            },\n            handleSubmit() {\n                this.status_data.loading = true\n                \n                // grab token and set it\n                this.axios.post('api/sanctum/token', {\n                    email: this.data.email,\n                    password: this.data.password,\n                }).then((response) => {\n                    this.status_data.loading = false\n                    this.status_data.success = true\n                    this.status_data.success_message = 'Success!'\n                    this.status_data.error = false\n\n                    // reset user token details\n                    localStorage.setItem('user', JSON.stringify({\n                        'token': response.data.data.token, \n                        'expiry': response.data.data.expiry\n                    }))   \n\n                    // redirect to home\n                    setTimeout(() => {\n                        this.$router.push({name: 'Users'});\n                    }, 2000); \n\n                }).catch(errors => {\n                    this.status_data.loading = false\n                    this.status_data.success = false\n                    this.status_data.error = true\n                    this.status_data.error_message = errors.message\n                })\n            },\n            seePassword() {\n                if(document.querySelector('#password').type == 'password') {\n                    document.querySelector('#password').type = 'text'\n                    this.eye = 'eye-slash'\n                } else {\n                    document.querySelector('#password').type = 'password'\n                    this.eye = 'eye'\n                }\n            },\n            getRandomArbitrary(min, max) {\n                return Math.random() * (max - min) + min;\n            }\n        }\n    }\n</script>"]}]}