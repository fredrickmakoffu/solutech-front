{"remainingRequest":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/kipekee-front/src/components/Navbar.vue?vue&type=style&index=0&id=41458b80&lang=scss&scoped=true","dependencies":[{"path":"/home/october/Documents/code/kipekee-front/src/components/Navbar.vue","mtime":1639315656187},{"path":"/home/october/Documents/code/kipekee-front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/kipekee-front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/kipekee-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9sYXlvdXQvX25hdmJhci5zY3NzJzsKCiAgICAuZHJvcGRvd24taXRlbSB7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIH0KICAgIAo="},{"version":3,"sources":["/home/october/Documents/code/kipekee-front/src/components/Navbar.vue"],"names":[],"mappings":";IAkBI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB","file":"/home/october/Documents/code/kipekee-front/src/components/Navbar.vue","sourceRoot":"","sourcesContent":["<template>\n  <nav :class=\"'navbar bg-' + background_color\">\n    <div class=\"container\">\n      \n      <div class=\"navbar-brand bars\" v-if=\"sidebar\" @click=\"toggled()\">\n        <span style=\"display: -webkit-inline-box;\">\n          <font-awesome-icon :class=\"'nav-icon text-' + color\" :icon=\"['fa', 'bars']\" />\n        </span>\n      </div>\n\n      <profile></profile>\n\n      <div class=\"divider mt-4 d-none\"></div>\n    </div>\n  </nav>\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../assets/scss/layout/_navbar.scss';\n\n    .dropdown-item {\n      cursor: pointer;\n    }\n    \n</style>\n\n<script>\nimport Profile from '../components/Profile';\n\n\nexport default {\n    name: 'Navbar',\n    props: {\n      background_color: {\n        type: String,\n        required: true\n      },\n      sidebar: {\n        required: false,\n        type: Boolean\n      }\n    },\n    components: {\n      Profile\n    },\n    data() {\n      return {\n        color: ''      \n      }\n    },\n    mounted() {\n      this.setColor();\n    },\n    methods: {\n      toggled() { \n        document.querySelector('#sidebar-wrapper').classList.add('toggled');\n        document.querySelector('.backdrop').classList.add('on');\n      },\n      setColor() {\n        if(this.background_color == \"white\") {\n          this.color = 'muted'\n        } else {\n          this.color = 'white'\n        }\n      }\n    }\n}\n</script>"]}]}