{"remainingRequest":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/kipekee-front/src/components/Custom/Site/Partners.vue?vue&type=style&index=0&id=31cf8acb&lang=scss&scoped=true","dependencies":[{"path":"/home/october/Documents/code/kipekee-front/src/components/Custom/Site/Partners.vue","mtime":1640721316492},{"path":"/home/october/Documents/code/kipekee-front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/kipekee-front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/kipekee-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi8uLi8uLi9hc3NldHMvc2Nzcy9oZWxwZXJzL19icmVha3BvaW50cy5zY3NzJzsKCiAgICAucGFydG5lci1pbWFnZSB7CiAgICAgICAgd2lkdGg6IDcwJTsKICAgICAgICBAaW5jbHVkZSBtZWRpYSgiPD10YWJsZXQiKSB7CiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgICAgICAgfQogICAgfSAgIAo="},{"version":3,"sources":["/home/october/Documents/code/kipekee-front/src/components/Custom/Site/Partners.vue"],"names":[],"mappings":";IAyKI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAExD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtB;IACJ","file":"/home/october/Documents/code/kipekee-front/src/components/Custom/Site/Partners.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"container p-4\">\n        <div class=\"position-absolute cog p-4\" v-if=\"if_logged_in\">\n            <button class=\"btn btn-dark bg-gradient btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#partnersProps\">\n                <font-awesome-icon :icon=\"['fas', 'cogs']\"></font-awesome-icon>\n            </button>\n        </div>\n\n        <div class=\"col-md-12 text-center mb-4\">\n            <h2 class=\"text-dark fw-bold burgundy-gradient-text\">{{ prop_data.title }}</h2>\n            <p style=\"font-size: 15px; letter-spacing: 0.4px;\">{{ prop_data.tagline }}</p>\n        </div>        \n\n        <div class=\"row mt-4 ps-4 pe-4\">\n            <div class=\"col-md-3 col-sm-6 mt-4\" v-for=\"({link, image, title}, index) in prop_data['partner-items']\" :key=index>\n                <div class=\"d-flex\">\n                    <a target=\"_blank\" :href=\"link\" class=\"text-decoration-none\">\n                        <div class=\"d-flex\">\n                            <img :src=\"image\" alt=\"\" class=\"img-fluid partner-image mx-auto\">\n                        </div>\n                        <figcaption class=\"text-muted text-center mt-2\">{{ title }}</figcaption>\n                    </a>\n                </div>\n            </div>                                                                                          \n        </div>\n    </div>\n\n    <div class=\"modal fade\" id=\"partnersProps\" tabindex=\"-1\" aria-labelledby=\"partnersPropsLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-body container\">\n                    <div class=\"row\">\n                        <status v-model:status_data=status_data></status>\n                        \n                        <form action=\"#\" @submit.prevent=\"submit(form_data, [false, ''], 'partners')\" v-show=\"screen == 1\">\n                            <span class=\"d-block w-100\">\n                                <h5 class=\"text-dark text-center\">Edit Section Details</h5>\n                            </span>\n                            \n                            <div class=\"row mb-4\">\n                                <label for=\"title\" class=\"fw-bold mb-2\">Title</label>\n                                <div class=\"input-group\">\n                                    <input id=\"title\" type=\"text\" class=\"form-control\" v-model=\"form_data.title\" required>\n                                </div>\n                                <small class=\"text-muted\">Enter your title.</small>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <label for=\"tagline\" class=\"fw-bold mb-2\">Tagline</label>\n                                <div class=\"input-group\">\n                                    <input id=\"tagline\" type=\"text\" class=\"form-control\" v-model=\"form_data.tagline\" required> \n                                </div>\n                                <small class=\"text-muted\">Enter your tagline.</small>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <label for=\"image\" class=\"fw-bold mb-2\">Background color</label>\n\n                                <div class=\"input-group\">\n                                    <select id=\"background_color\" class=\"form-select\" v-model=\"form_data.background_color\" required>\n                                        <option></option>\n                                        <option value=\"white\">White</option>\n                                        <option value=\"light\">Light</option>\n                                        <option value=\"dark\">Dark</option>\n                                        <option value=\"burgundy\">Burgundy</option>\n                                    </select>\n                                </div>\n                                <small class=\"text-muted\">Enter the background color.</small>\n                            </div>\n\n                            <div class=\"row mb-4 mt-2\">\n                                <div class=\"col-md-12 mt-2 d-flex\">\n                                    <button type=\"submit\" class=\"btn btn-dark w-75 me-2\">\n                                        Submit\n                                    </button>\n\n                                    <button type=\"button\" class=\"btn bg-secondary text-white w-25\" @click=\"changeScreen(2)\">\n                                        <font-awesome-icon :icon=\"['fas', 'angle-right']\"></font-awesome-icon>\n                                    </button>\n                                </div>\n                            </div>                              \n                        </form>\n\n                        <form action=\"#\"  @submit.prevent=\"submit(partners, [false, ''], 'partner-items', true)\" v-show=\"screen == 2\">\n                            <p class=\"text-burgundy fw-bold\">Add a Partner entry</p>\n                            <div class=\"row mb-4\">\n                                <label for=\"partners.title\" class=\"fw-bold mb-2\">Title</label>\n\n                                <div class=\"input-group\">\n                                    <input id=\"partners.title\" type=\"text\" class=\"form-control\" v-model=\"partners.title\" @change=\"ifUnique('title', $event.currentTarget)\" required>\n                                </div>\n\n                                <small class=\"text-muted\">Enter your title.</small>\n                            </div>  \n\n                            <div class=\"row mb-4\">\n                                <label for=\"line\" class=\"fw-bold mb-2\">Link</label>\n\n                                <div class=\"input-group\">\n                                    <input type=\"text\" id=\"partners.text\" rows=\"2\" class=\"form-control\" v-model=\"partners.link\" @change=\"ifUnique('link', $event.currentTarget)\"  required>\n                                </div>\n                                <small class=\"text-muted\">Enter the link.</small>\n                            </div>\n\n                            <div class=\"row mb-4\">\n                                <label for=\"line\" class=\"fw-bold mb-2\">Image</label>\n\n                                <div class=\"input-group\">\n                                    <input type=\"file\" class=\"form-control\" @change=\"onImageChange($event, 'partners')\">\n                                </div>\n                                <small class=\"text-muted\">Upload Image.</small>\n                            </div>\n\n                            <div class=\"row mb-4 mt-2\">\n                                <div class=\"col-md-12 mt-2 d-flex\">\n                                    <button type=\"submit\" class=\"btn btn-dark w-75 me-2\">\n                                        Submit\n                                    </button>\n\n                                    <span class=\"w-25 d-flex\">\n                                        <button type=\"button\" class=\"btn bg-secondary text-white me-2 w-50\" @click=\"changeScreen(1)\">\n                                            <font-awesome-icon :icon=\"['fas', 'angle-left']\"></font-awesome-icon>\n                                        </button>\n\n                                        <button type=\"button\" class=\"btn bg-secondary text-white w-50\" @click=\"changeScreen(3)\">\n                                            <font-awesome-icon :icon=\"['fas', 'angle-right']\"></font-awesome-icon>\n                                        </button>\n                                    </span>\n                                </div>\n                            </div>                                                                    \n                        </form>\n\n                        <div v-show=\"screen == 3\">\n                            <p class=\"text-burgundy fw-bold\">Delete a Partner entry</p>\n\n                            <div class=\"row\" v-for=\"({title, link}, index) in prop_data['partner-items']\" :key=\"index\">\n\n                                <div class=\"col-md-12 d-flex\">\n                                    <div class=\"d-block me-4\">\n                                        <p class=\"mb-0 text-dark\">&bull; {{ title }}</p>                                     \n                                        <p class=\"text-muted\">{{ link }}</p>                                     \n                                    </div>\n                                    <div class=\"d-block ms-auto\">\n                                        <p class=\"mb-0\" style=\"cursor: pointer\" @click=\"remove(prop_data['partner-items'], index, 'partner-items')\">\n                                            <font-awesome-icon class=\"text-burgundy\" :icon=\"['fas', 'trash-alt']\"></font-awesome-icon>\n                                        </p>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"col-md-12 mt-2 d-flex\">\n                                <button type=\"button\" class=\"btn bg-secondary text-white w-25 me-2\" @click=\"changeScreen(2)\">\n                                    <font-awesome-icon :icon=\"['fas', 'angle-left']\"></font-awesome-icon>\n                                </button>\n\n                                <button type=\"submit\" class=\"btn btn-dark w-75 me-2\">\n                                    Submit\n                                </button>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<style lang=\"scss\" scoped>\n    @import '../../../assets/scss/helpers/_breakpoints.scss';\n\n    .partner-image {\n        width: 70%;\n        @include media(\"<=tablet\") {\n            margin-left: auto;\n            margin-right: auto;\n        }\n    }   \n</style>\n\n<script>\n    import handleProps from '../../../mixins/handleProps';\n    import image from '../../../mixins/image';\n    import Status from '../../Status';  \n\n    export default {\n        name: \"Partners\",\n        mixins: [handleProps, image],\n        props: {\n            prop_data: {\n                required: true,\n                type: Object\n            },    \n            page: {\n                required: true, \n                type: String\n            }               \n        },\n        components: {\n            Status\n        },\n        data() {\n            return {\n                form_data: {\n                    title: this.prop_data.title,\n                    tagline: this.prop_data.tagline,\n                    background_color: this.prop_data.background_color\n                },\n                status_data: {\n                    success: false,\n                    success_message: 'Form Submission was successful!',\n                    error: false,\n                    error_message: 'There are some errors.',\n                    loading: false\n                }, \n                screen: 1,\n                partners: {\n                    title: '',\n                    link: '',\n                    image: '',\n                }, \n                if_logged_in: false\n            }\n        },\n        mounted() {\n            this.ifLoggedIn()\n        },        \n        methods: {\n            submitProps() {\n                var post_form_data = []\n\n                Object.entries(this.form_data).forEach(element => {\n                    if(this.prop_data[element[0]] != element[1]) {\n                        post_form_data.push({\n                            value: element[1],\n                            prop: element[0],\n                            component: 'partners',\n                            container: false,\n                            page: 'Home',\n                            child: false,\n                            parent: \"\"\n                        })\n                    }\n                });\n\n                this.axios.post('api/prop', post_form_data).then(() => {\n                    this.status_data.loading = false\n                    this.status_data.error = false\n                    this.status_data.success = true\n                }).catch((error) => {\n                    this.status_data.loading = false\n                    this.status_data.error = true\n                    this.status_data.error_message = 'Section data was not successfully updated!' + error\n                    this.status_data.success = false\n                })\n            },            \n            submitPartner() {\n                var post_form_data = []\n\n                Object.entries(this.partners).forEach(element => { \n                    if(element[1] != '') {\n                        post_form_data.push({\n                            value: element[1],\n                            prop: element[0],\n                            component: 'partner-items',\n                            container: true,\n                            page: 'Home',\n                            child: false,\n                            parent: \"\"\n                        })\n                    }\n                });\n\n                this.axios.post('api/prop', post_form_data).then((response) => {\n                    this.status_data.loading = false\n                    this.status_data.error = false\n                    this.status_data.success = true\n\n                    console.log(response)\n                }).catch((error) => {\n                    this.status_data.loading = false\n                    this.status_data.error = true\n                    this.status_data.error_message = 'Section data was not successfully updated! ' + error\n                    this.status_data.success = false\n\n                    console.log(error)\n                })\n            },\n            deletePartner(index) {\n                const partner = this.prop_data['partner-items'][index]\n                const post_form_data = []\n\n                Object.entries(partner).forEach(element => {\n                    post_form_data.push({\n                        value: element[1],\n                        prop: element[0],\n                        component: 'partner-items',\n                        container: true,\n                        page: 'Home',\n                        child: false,\n                        parent: \"\"\n                    })\n                });\n\n                console.log(post_form_data)\n                \n                // this.axios.post('api/component-props/delete', post_form_data).then((response) => {\n                //     this.status_data.loading = false\n                //     this.status_data.error = false\n                //     this.status_data.success = true\n                    \n                //     console.log(response)\n                //     // unset service that was deleted\n                //     const props = Object.create(this.prop_data)\n                //     props['partner-items'].splice(index, 1)\n\n                //     // update prop data\n                //     this.$emit('update:prop_data', props)\n                // }).catch((error) => {\n                //     this.status_data.loading = false\n                //     this.status_data.error = true\n                //     this.status_data.error_message = 'Section data was not successfully updated!' + error\n                //     this.status_data.success = false\n                // })\n            },\n            changeScreen(value) {\n                this.screen = value\n            },  \n            ifUnique(value, event) {\n                var current_event = null\n\n                if(this.prop_data['partner-items'] != null) {\n                    this.prop_data['partner-items'].forEach(element => {\n                        if(element[value].toLowerCase() == this.partners[value].toLowerCase()) {\n\n                            current_event = event.parentNode.nextElementSibling\n\n                            this.partners[value] = ''\n\n                            current_event.innerHTML = 'This '+ value + ' is already taken. Please choose something unique.'\n\n                            event.parentNode.nextElementSibling.classList.remove('text-muted')\n\n                            event.parentNode.nextElementSibling.classList.add('text-burgundy')\n                        }\n                    });\n\n                    if(current_event == null && event.parentNode.nextElementSibling.classList.contains('text-burgundy')) {\n\n                        event.parentNode.nextElementSibling.innerHTML = 'Nice!'\n\n                        event.parentNode.nextElementSibling.classList.remove('text-burgundy')\n\n                        event.parentNode.nextElementSibling.classList.add('text-primary')\n                    }\n                }\n            },\n            ifLoggedIn() {\n                if(localStorage.getItem('user') != null) {\n                    this.if_logged_in = true\n                } else {\n                    this.if_logged_in = false\n                }\n            }                  \n        }\n    }\n</script>"]}]}