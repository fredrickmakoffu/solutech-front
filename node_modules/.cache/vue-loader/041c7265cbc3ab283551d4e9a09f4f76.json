{"remainingRequest":"/home/october/Documents/code/kipekee/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/kipekee/front/src/components/Custom/AmenityModal.vue?vue&type=style&index=0&id=2c90548a&lang=scss&scoped=true","dependencies":[{"path":"/home/october/Documents/code/kipekee/front/src/components/Custom/AmenityModal.vue","mtime":1640783442069},{"path":"/home/october/Documents/code/kipekee/front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/kipekee/front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/kipekee/front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/kipekee/front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/kipekee/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee/front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi8uLi9hc3NldHMvc2Nzcy9sYXlvdXQvX2Zvcm0uc2Nzcyc7Cg=="},{"version":3,"sources":["/home/october/Documents/code/kipekee/front/src/components/Custom/AmenityModal.vue"],"names":[],"mappings":";IAuII,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/october/Documents/code/kipekee/front/src/components/Custom/AmenityModal.vue","sourceRoot":"","sourcesContent":["<template>\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"amenity\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"amenityLabel\" aria-hidden=\"true\" data-bs-backdrop=\"static\">\n        <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n            <div class=\"modal-content\" style=\"overflow-y: scroll\">\n                <div class=\"modal-header pb-0\">\n                    <span class=\"d-block\">\n                        <h5 class=\"content-title-min\">Amenities</h5>\n                        <p v-if=\"screen == 1\" class=\"text-muted\">Click to add more property amenities</p>\n                    </span>\n                </div>\n\n                <form action=\"#\" @submit.prevent=\"handleSubmit()\">\n                    \n                    <status v-model:status_data=status_data></status>\n\n                    <div class=\"modal-body pt-0\">\n                        <span class=\"row\" v-if=\"screen == 1\">\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"wi_fi\" style=\"cursor: pointer\" @click=\"setAmenity('Wi-Fi')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'video']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">Wi-Fi</p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"cctv\" style=\"cursor: pointer\" @click=\"setAmenity('CCTV')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'video']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">24 CCTV</p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"24_hour_security\" style=\"cursor: pointer\" @click=\"setAmenity('24 Hour Security')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'lock']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">24 H security</p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"gym\" style=\"cursor: pointer\" @click=\"setAmenity('Gym')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'dumbbell']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">Gym</p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"swimming_pool\" style=\"cursor: pointer\" @click=\"setAmenity('Swimming Pool')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'swimming-pool']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">Swimming pool</p>\n                                </div>\n                            </div> \n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"borehole\" style=\"cursor: pointer\" @click=\"setAmenity('Borehole')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'hand-holding-water']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">Borehole</p>\n                                </div>\n                            </div> \n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"generator\" style=\"cursor: pointer\" @click=\"setAmenity('Generator')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'bolt']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">24 H Generator</p>\n                                </div>\n                            </div> \n                                \n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"elevator\" style=\"cursor: pointer\" @click=\"setAmenity('Elevator')\">\n                                    <h4 class=\"text-center\" style=\"border-radius: 50%;\n                                        margin: auto;\n                                        width: 40px;\n                                        height: 40px;\n                                        display: flex;\n                                        align-items: center;\n                                        justify-content: center;\n                                        border: 1px solid;\">\n                                        <font-awesome-icon :icon=\"['fas', 'sort']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">Elevator</p>\n                                </div>\n                            </div> \n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"parking_spots\" style=\"cursor: pointer\" @click=\"setAmenity('Parking Spots')\">\n                                <h4 class=\"text-center\">\n                                    <font-awesome-icon :icon=\"['fas', 'parking']\"></font-awesome-icon>\n                                </h4>\n                                <p class=\"text-uppercase text-center mb-0 mt-2\">27 Parking Spots</p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-6 col-sm-6 mt-4\">\n                                <div class=\"card bg-light p-2 pt-3 pb-3\" id=\"outdoor_space\" style=\"cursor: pointer\" @click=\"setAmenity('Outdoor Space')\">\n                                    <h4 class=\"text-center\">\n                                        <font-awesome-icon :icon=\"['fas', 'spa']\"></font-awesome-icon>\n                                    </h4>\n                                    <p class=\"text-uppercase text-center mb-0 mt-2\">Outdoor Space</p>\n                                </div>\n                            </div>   \n\n                            <div class=\"row mt-4 pe-0\">\n                                <div class=\"col-md-12 mt-2 d-flex\"> \n                                    <button type=\"button\" class=\"btn btn-dark text-white w-75 me-2\" @click=\"saveAmenities()\">\n                                        Save\n                                    </button>  \n\n                                    <button type=\"button\" class=\"btn btn-secondary text-white w-25\" @click=\"removeCurrentAmenities(property.amenities)\" data-bs-dismiss=\"modal\">\n                                        <font-awesome-icon class=\"me-2\" :icon=\"['fas', 'times-circle']\"></font-awesome-icon> Close\n                                    </button>\n                                </div>\n                            </div>  \n                        </span>\n                    </div>               \n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../../assets/scss/layout/_form.scss';\n</style>\n\n<script>\nimport Status from '../../components/Status';\n\nexport default {\n    name: \"AmenityModal\",\n    components: {\n        Status\n    },\n    data() {\n        return {\n            screen: 1,\n            property: [],\n            amenities: [],\n            in_amenities: [],\n            set_amenities: [],\n            remove_amenities: [],\n            status_data: {\n                \"success\": false,\n                \"success_message\": '',\n                \"error\": false,\n                \"error_message\": '',\n                \"loading\": false\n            },\n            amenity_icons: {\n                'Wi-Fi': 'wifi',\n                'CCTV': 'video',\n                'Gym': 'dumbbell',\n                'Swimming Pool': 'swimming-pool',\n                '24 Hour Security': 'lock',\n                'Parking Spots': 'parking',\n                'Outdoor Space': 'spa',\n                'Elevator': 'sort',\n                'Generator': 'bolt',\n                'Borehole': 'hand-holding-water',\n            }\n        }\n    },\n    computed: {\n        modal_list () {\n            return this.$store.state.modal_list\n        }\n    },    \n    watch: {\n        modal_list: function() {\n            // re-assign property\n            this.property = this.$store.state.modal_list\n\n            if(this.property.amenities != null) {  \n                // clear\n                this.amenities = []\n                this.in_amenities = []\n                this.set_amenities = []\n                \n                this.setAmenities(this.property.amenities)\n            }\n        }\n    },\n    methods: {\n        removeCurrentAmenities() {\n            var i = 0\n\n            while (i < Object.keys(this.property.amenities).length) {\n                this.highlightElement(this.property.amenities[i].amenity, 'remove')\n                \n                i++\n            }\n        },\n        setAmenity(value) {\n            var i = 0;\n\n            if(!this.in_amenities.includes(value)) {\n                this.amenities.push({\n                    amenity: value, \n                    property_id: this.property.id\n                })\n\n                while (i < Object.keys(this.remove_amenities).length) {\n                    if(this.remove_amenities[i].amenity == value) {\n                        this.remove_amenities.splice(i, 1);\n                    }\n                    \n                    i++\n                }\n\n                this.in_amenities.push(value)\n                this.highlightElement(value, 'add')                \n\n            } else {\n                while (i < Object.keys(this.amenities).length) {\n                    if(this.amenities[i].amenity == value) {\n                        this.amenities.splice(i, 1);\n                    }\n\n                    i++\n                }\n\n                this.in_amenities.splice(this.in_amenities.indexOf(value), 1);\n\n                if(this.set_amenities.includes(value)) {\n                    this.remove_amenities.push({\n                        amenity: value, \n                        property_id: this.property.id\n                    })\n                }\n              \n                this.highlightElement(value, 'remove')               \n            }\n        },\n        setAmenities(amenities) {\n            var i = 0\n\n            while(i < Object.keys(amenities).length) {\n                let value = amenities[i].amenity\n\n                this.in_amenities.push(value)\n                this.set_amenities.push(value)\n\n                this.highlightElement(value, 'add')\n                \n                i++\n            }\n        },\n        saveAmenities() {\n            if(Object.keys(this.amenities).length > 0) {\n                this.axios.post('api/amenity', this.amenities).then(() => {\n                    \n                    if(Object.keys(this.remove_amenities).length > 0) {\n                        // remove amenities after\n                        this.axios.post('api/delete_amenity', this.remove_amenities).then(() => {\n                            this.status_data.loading = false\n                            this.status_data.success = true\n                            this.status_data.success_message = 'Success!'\n                            \n                            setTimeout(() => {\n                        document.querySelector(\".alert\").scrollIntoView({behavior: \"smooth\"})\n                    }, 500);\n\n                            setTimeout(() => {\n                                this.status_data.success = false\n                            }, 1000);\n\n                        }).catch((error) => {\n                            this.status_data.loading = false\n                            this.status_data.error = true\n                            this.status_data.error_message = error\n                            \n                            setTimeout(() => {\n                        document.querySelector(\".alert\").scrollIntoView({behavior: \"smooth\"})\n                    }, 500);\n\n                            setTimeout(() => {\n                                this.status_data.error = false\n                            }, 1000);\n                        })\n                    } else {\n                        this.status_data.loading = false    \n                        this.status_data.success = true\n                        this.status_data.success_message = 'Success!'\n\n                        setTimeout(() => {\n                        document.querySelector(\".alert\").scrollIntoView({behavior: \"smooth\"})\n                    }, 500);\n\n                        setTimeout(() => {\n                            this.status_data.success = false\n                        }, 1000);                        \n                    }\n\n\n                }).catch((error) => {\n                    this.status_data.loading = false\n                    this.status_data.error = true\n                    this.status_data.error_message = error\n\n                    setTimeout(() => {\n                        document.querySelector(\".alert\").scrollIntoView({behavior: \"smooth\"})\n                    }, 500);\n\n                    setTimeout(() => {\n                        this.status_data.error = false\n                    }, 1500);                    \n                })                \n            } else if(Object.keys(this.remove_amenities).length > 0) {\n            \n                // remove amenities after\n                this.axios.post('api/delete_amenity', this.remove_amenities).then(() => {\n                    this.status_data.loading = false\n                    this.status_data.success = true\n                    this.status_data.success_message = 'Success!'\n\n                    setTimeout(() => {\n                        document.querySelector(\".alert\").scrollIntoView({behavior: \"smooth\"})\n                    }, 500);\n\n                    setTimeout(() => {\n                        this.status_data.success = false\n                    }, 1500);  \n\n                }).catch((error) => {\n                    this.status_data.loading = false\n                    this.status_data.error = true\n                    this.status_data.error_message = error\n\n                    setTimeout(() => {\n                        document.querySelector(\".alert\").scrollIntoView({behavior: \"smooth\"})\n                    }, 500);\n                \n                    setTimeout(() => {\n                        this.status_data.error = false\n                    }, 1500);                    \n                })\n            }\n        },\n        highlightElement(value, action) {\n            let id = ''\n\n            if(value.indexOf(' ') !== -1) {\n                id = value.split(' ').map((element) => {\n                    return element.toLowerCase()\n                }).join('_')\n            } else {\n                id = value.split('-').map((element) => {\n                    return element.toLowerCase()\n                }).join('_')\n            }\n\n            if(action == 'add') {\n                document.getElementById(id).classList.add('bg-primary', 'border-0', 'text-white');     \n            } else if(action == 'remove') {\n                document.getElementById(id).classList.remove('bg-primary', 'border-0', 'text-white');     \n            }       \n        }\n    }\n}\n</script>"]}]}