{"remainingRequest":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/kipekee-front/src/components/SectionTitle.vue?vue&type=style&index=0&id=a911a3c8&lang=scss&scoped=true","dependencies":[{"path":"/home/october/Documents/code/kipekee-front/src/components/SectionTitle.vue","mtime":1639236431410},{"path":"/home/october/Documents/code/kipekee-front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/kipekee-front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/kipekee-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9sYXlvdXQvX2xpc3RzLnNjc3MnOwo="},{"version":3,"sources":["/home/october/Documents/code/kipekee-front/src/components/SectionTitle.vue"],"names":[],"mappings":";IAoBI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/october/Documents/code/kipekee-front/src/components/SectionTitle.vue","sourceRoot":"","sourcesContent":["<template>\n    <span class=\"d-flex\">\n        <h5 class=\"content-title\" style=\"margin-top: 45px; margin-bottom: 20px;\">{{ title }}</h5>\n        <div class=\"content-buttons\" v-if=\"actions\">\n            <span v-for=\"({name, action_url, type}, index) in actions\" :key=\"index\" >\n                \n                <button class=\"btn button success btn-sm\" v-if=\"type == 'modal'\" @click=\"setListData(data = {}, action_url)\">\n                    <span class=\"ms-2 me-2\">{{ name }}</span><font-awesome-icon :icon=\"['fa', 'angle-down']\" />&nbsp; \n                </button>  \n\n                <button class=\"btn button success btn-sm\" v-if=\"type == 'api'\" @click=\"autoAPI(action_url)\"> \n                    <span class=\"ms-2 me-2\">{{ name }}</span><font-awesome-icon :icon=\"['fa', 'angle-down']\" />&nbsp; \n                </button> \n                  \n            </span>\n        </div>\n    </span>\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../assets/scss/layout/_lists.scss';\n</style>\n\n<script>\nimport {Modal} from 'bootstrap'\n\nexport default {\n    name: \"SectionTitle\",\n    props: {\n        title: {\n            type: String,\n            required: true\n        },\n        actions: {\n            type: Array,\n            required: true\n        },\n        list_data: {\n            required: false,\n            type: Object\n        }\n    },\n    methods: {\n        setListData(data, action_url) {\n            this.$store.dispatch(\"getModalList\", data)\n            this.modalElem = new Modal(document.getElementById(action_url))\n            this.modalElem.show()\n        },\n        autoAPI(url, message) {\n            this.status_data.loading = true\n\n            this.axios[url.type](url.url).then(() => {\n                this.status_data.loading = false\n                this.status_data.error = false\n                this.status_data.success = true\n                this.status_data.success_message = message.success\n\n                setTimeout(() => (this.status_data.success = false), 2000)\n                this.getDatabyPage() \n            }).catch((error) => {\n                this.status_data.loading = false\n                this.status_data.error = true\n                this.status_data.success = false\n                this.status_data.error_message = message.error\n\n                setTimeout(() => (this.status_data.error = false), 2000)   \n                console.log(error)\n            })\n        },        \n    }\n}\n</script>"]}]}