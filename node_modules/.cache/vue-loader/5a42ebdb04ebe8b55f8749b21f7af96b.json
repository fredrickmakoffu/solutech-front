{"remainingRequest":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/solutech/front/src/components/Modal/AssignToVehicle.vue?vue&type=style&index=0&id=55731700&lang=scss&scoped=true","dependencies":[{"path":"/home/october/Documents/code/solutech/front/src/components/Modal/AssignToVehicle.vue","mtime":1648657099575},{"path":"/home/october/Documents/code/solutech/front/node_modules/css-loader/dist/cjs.js","mtime":1630502847564},{"path":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/solutech/front/node_modules/postcss-loader/src/index.js","mtime":1630502853892},{"path":"/home/october/Documents/code/solutech/front/node_modules/sass-loader/dist/cjs.js","mtime":1630502879448},{"path":"/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBAaW1wb3J0ICcuLi8uLi9hc3NldHMvc2Nzcy9sYXlvdXQvX2Zvcm0uc2Nzcyc7CiAgICBAaW1wb3J0ICcuLi8uLi9hc3NldHMvc2Nzcy9oZWxwZXJzL19icmVha3BvaW50cy5zY3NzJzsKICAgIAogICAgLnNpZGUtbWVudSB7CiAgICAgICAgQGluY2x1ZGUgbWVkaWEoIjw9dGFibGV0IikgewogICAgICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICAgIH0KCiAgICAgICAgcCB7CiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgICB9CiAgICB9CgogICAgLnRvcC1tZW51IHsKICAgICAgICBkaXNwbGF5OiBub25lOwoKICAgICAgICBAaW5jbHVkZSBtZWRpYSgiPD10YWJsZXQiKSB7CiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgfQoKICAgICAgICBwIHsKICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgIH0KICAgIH0gCg=="},{"version":3,"sources":["/home/october/Documents/code/solutech/front/src/components/Modal/AssignToVehicle.vue"],"names":[],"mappings":";IAoDI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAErD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB;;QAEA,EAAE;YACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB;IACJ;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;QAEb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB;;QAEA,EAAE;YACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB;IACJ","file":"/home/october/Documents/code/solutech/front/src/components/Modal/AssignToVehicle.vue","sourceRoot":"","sourcesContent":["<template>\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"assign-to-vehicle\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"formsLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header pb-0\">\n                    <span class=\"d-block\">\n                        <h5 class=\"content-title-min\">Assign Order to Vehicle</h5>\n                    </span>\n                </div>\n                            \n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-sm-12\">\n                            <status v-model:status_data=status_data></status>\n\n                            <form action=\"#\" @submit.prevent=\"handleSubmit()\">\n                                <div class=\"form-row\">\n                                    <label for=\"vehicle\" class=\"fw-bold mb-2\">Choose Vehicle</label>\n\n                                    <div class=\"input-group\">\n                                        <select v-model=\"assigned.vehicle_id\" id=\"vehicle\" class=\"form-select\">\n                                            <option :value=\"id\" v-for=\"({registration, id}, index) in vehicles\" :key=\"index\">{{ registration }}</option>\n                                        </select>\n                                    </div>\n                                </div>\n\n                                <div class=\"d-flex mt-4\">\n                                    <button type=\"button\" class=\"btn button btn-sm secondary ms-auto\" data-bs-dismiss=\"modal\">\n                                        <span class=\"ms-2 me-2\">Cancel</span> <font-awesome-icon :icon=\"['fa', 'times-circle']\" />&nbsp;\n                                    </button>\n                                    \n                                    <button :class=\"[{'success': status_data.loading == false }, {'default': status_data.loading == true }, 'btn', 'button', 'btn-sm']\" :disabled=\"status_data.loading == true\">\n                                        <span class=\"ms-2 me-2\">Change</span> \n                                        \n                                        <font-awesome-icon class=\"me-1\" v-if=\"status_data.loading == false\" :icon=\"['fa', 'check-circle']\" />\n                                        \n                                        <div class=\"spinner-border spinner-border-sm\" role=\"status\" v-if=\"status_data.loading == true\">\n                                            <span class=\"visually-hidden\">Loading...</span>\n                                        </div>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../../assets/scss/layout/_form.scss';\n    @import '../../assets/scss/helpers/_breakpoints.scss';\n    \n    .side-menu {\n        @include media(\"<=tablet\") {\n            display: none;\n        }\n\n        p {\n            cursor: pointer;\n        }\n    }\n\n    .top-menu {\n        display: none;\n\n        @include media(\"<=tablet\") {\n            display: flex;\n        }\n\n        p {\n            cursor: pointer;\n        }\n    } \n</style>\n\n<script>\nimport Status from '../../components/Status';\n\nexport default {\n    name: 'AssignToVehicle',\n    props: ['orders'],\n    computed: {\n        modal_list () {\n            return this.$store.state.modal_list\n        }\n    },      \n    watch: {\n        modal_list: function (){\n            this.assigned.order_id = this.$store.state.modal_list.id\n        }\n    },\n    components: {\n        Status\n    },\n    data() {\n        return {\n            assigned: {\n                order_id: null,\n                vehicle_id: null\n            },\n            vehicles: {},\n            vehicle: null,\n            status_data: {\n                success: false,\n                success_message: null, \n                error: false,\n                error_message: null,\n                loading: false\n            },\n        }\n    },\n    mounted() {\n        this.getVehicles()\n    },\n    methods: {\n        handleSubmit() {\n            this.axios.post('api/assign-vehicle', this.assigned).then(() => {\n                this.status_data.loading = false\n                this.status_data.error = false\n                this.status_data.success = true\n                this.status_data.success_message = 'Success!'\n\n                setTimeout(() => {\n                    this.status_data.success = false\n                }, 1500);   \n\n                this.getOrders()\n            }).catch((error) => {\n                this.status_data.loading = false\n                this.status_data.error = true\n                this.status_data.success = false\n                this.status_data.error_message = error.response.data.message\n            })                      \n        },\n        getVehicles() {\n            this.axios.get('api/vehicles').then(response => {\n                this.vehicles = response.data.data\n            })\n        },\n        getOrders() {\n            this.axios.get('api/orders').then(response => {\n                this.$emit('update:orders', response.data.data)\n            })\n        }\n    }\n}\n</script>"]}]}