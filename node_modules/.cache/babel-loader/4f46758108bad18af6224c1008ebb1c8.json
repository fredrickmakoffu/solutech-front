{"remainingRequest":"/home/october/Documents/code/solutech/front/node_modules/babel-loader/lib/index.js!/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/solutech/front/src/components/AutoList.vue?vue&type=template&id=6da8749d&scoped=true","dependencies":[{"path":"/home/october/Documents/code/solutech/front/src/components/AutoList.vue","mtime":1648809842701},{"path":"/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/solutech/front/node_modules/babel-loader/lib/index.js","mtime":1630502822507},{"path":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/october/Documents/code/solutech/front/src/components/AutoList.vue"],"names":[],"mappings":";;;;;;;;;;;AAGS,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AAMd,EAAA,EAAE,EAAC,Q;AAAS,EAAA,KAAK,EAAC;;;AACd,EAAA,KAAK,EAAC;;;AACA,EAAA,KAAK,EAAC;;;AAEN,EAAA,EAAE,EAAC,O;AAAQ,EAAA,KAAK,EAAC;;;AACb,EAAA,KAAK,EAAC;;;8BAEL,YAAA,CAAsB,IAAtB,EAAsB;AAAlB,EAAA,KAAK,EAAC;AAAY,CAAtB,EAAgB,GAAhB,EAAiB,CAAA;AAAA;AAAjB,C;;;AAEU,EAAA,KAAK,EAAC;;;;;;AAQZ,EAAA,KAAK,EAAC;;;;AAIN,EAAA,KAAK,EAAC;;;AAGF,EAAA,KAAK,EAAC,e;AAAgB,qBAAgB;;;AAc7D,EAAA,EAAE,EAAC,O;AAAQ,EAAA,KAAK,EAAC;;;AACb,EAAA,KAAK,EAAC;;;AACA,EAAA,KAAK,EAAC;;;AACN,EAAA,KAAK,EAAC;;;AAIR,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;AACwF,EAAA,KAAK,EAAC;;;AAEtG,EAAA,KAAK,EAAC;;;AAGO,EAAA,KAAK,EAAC;;;AAIN,EAAA,KAAK,EAAC;;;;;;;;;;;;sDAnEf,MAAA,CAAA,KAAA,CAAM,MAAN,IAAY,I,kBAAjC,YAAA,CAAqG,wBAArG,EAAqG;UAAA;AAAzD,IAAA,KAAK,EAAC,MAAA,CAAA,KAAA,CAAM,KAA6C;AAAtC,IAAA,OAAO,EAAC,MAAA,CAAA,KAAA,CAAM;AAAwB,GAArG,E,IAAA,E;;AAAA,I,oBAAA,C,uCAEA,YAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALF,YAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHF,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,YAAA,CAAiD,iBAAjD,EAAiD;AAAjC,IAAA,WAAW,EAAC,KAAA,CAAA,WAAqB;;aAArB,KAAA,CAAA,WAAA,GAAW,M;;AAAU,GAAjD,E,IAAA,E;;AAAA,I,eAAA,CACE,CAFN,CAGE,CAJN,CAKE,CANN,C,EAQA,YAAA,CAoCM,KApCN,EAAA,UAAA,EAoCM,CAnCF,YAAA,CAkCM,KAlCN,EAAA,UAAA,EAkCM,CAjCF,YAAA,CAAgF,OAAhF,EAAA,UAAA,EAAgF,gBAAA,CAAjC,KAAA,CAAA,MAAiC,CAAA,GAAxB,kBAAxD,EAAwE;AAAA;AAAxE,GAiCE,EA/BF,YAAA,CA8BQ,OA9BR,EAAA,UAAA,EA8BQ,CA7BJ,YAAA,CAQQ,OARR,EAAA,UAAA,EAQQ,CAPJ,YAAA,CAMK,IANL,EAMK,IANL,EAMK,CALD,UAKC,G,kBAJD,YAAA,CAEK,SAFL,EAEK,IAFL,EAEK,WAAA,CAFyB,KAAA,CAAA,OAEzB,EAFgC,UAAzB,MAAyB,EAAjB,KAAiB,EAAZ;yBAAzB,YAAA,CAEK,IAFL,EAEK;AAFmC,MAAA,GAAG,EAAE,KAExC;AAF+C,MAAA,KAAK,EAAC;AAErD,KAFL,E,CACI,YAAA,CAAsE,MAAtE,EAAA,WAAA,EAAsE,gBAAA,CAArC,MAAM,CAAC,KAAP,CAAY,GAAZ,EAAkB,IAAlB,CAAsB,GAAtB,CAAqC,CAAtE,EAAuD;AAAA;AAAvD,K,CADJ,C;GAEK,CAFL,E;;AAAA,GAIC,GADS,MAAA,CAAA,WAAA,CAAY,MAAA,CAAA,MAAA,GAAM,CAAlB,EAAsB,O,kBAAhC,YAAA,CAAqD,IAArD,EAAqD,WAArD,EAAyC,SAAzC,C,qCACC,CANL,CAOI,CARR,CA6BI,EAnBJ,YAAA,CAkBQ,OAlBR,EAkBQ,IAlBR,EAkBQ,E,kBAjBJ,YAAA,CAgBK,SAhBL,EAgBK,IAhBL,EAgBK,WAAA,CAhBuB,KAAA,CAAA,IAgBvB,EAhB2B,UAApB,IAAoB,EAAd,KAAc,EAAT;yBAAvB,YAAA,CAgBK,IAhBL,EAgBK;AAhB8B,MAAA,GAAG,EAAE;AAgBnC,KAhBL,EAA6C,CACzC,YAAA,CAAoC,IAApC,EAAA,WAAA,EAAoC,gBAAA,CAAjB,KAAK,GAAA,CAAY,CAApC,EAAwB;AAAA;AAAxB,KADyC,G,kBAEzC,YAAA,CACwB,SADxB,EACwB,IADxB,EACwB,WAAA,CAD8B,KAAA,CAAA,OAC9B,EADqC,UAAzB,MAAyB,EAAjB,KAAiB,EAAZ;2BAAjD,YAAA,CACwB,IADxB,EACwB;AADpB,QAAA,KAAK,EAAC,iBACc;AADwC,QAAA,GAAG,EAAE;AAC7C,OADxB,E,iBACI,IAAI,CAAC,MAAD,C,CADR,EACe;AAAA;AADf,O;KACwB,CADxB,E;;AAAA,KAFyC,GAKd,MAAA,CAAA,WAAA,CAAY,MAAA,CAAA,MAAA,GAAM,CAAlB,EAAsB,O,kBAAjD,YAAA,CAUK,IAVL,EAAA,WAAA,EAUK,CATD,YAAA,CAA6K,4BAA7K,EAA6K;AAAzJ,MAAA,IAAI,EAAE,CAAA,KAAA,EAAA,YAAA,CAAmJ;AAA5H,MAAA,KAAK,EAAC,iBAAsH;AAApG,MAAA,IAAI,EAAC,QAA+F;AAAtF,MAAA,EAAE,EAAC,cAAmF;AAApE,wBAAe,UAAqD;AAA1C,uBAAc;AAA4B,KAA7K,CASC,EAPD,YAAA,CAMK,IANL,EAAA,WAAA,EAMK,E,kBALD,YAAA,CAIK,SAJL,EAIK,IAJL,EAIK,WAAA,CAJ2C,MAAA,CAAA,WAAA,CAAY,MAAA,CAAA,MAAA,GAAM,CAAlB,EAAsB,OAIjE,EAJwE,gBAAvC,KAAuC,EAAlC;AAAA,UAA9B,IAA8B,QAA9B,IAA8B;AAAA,UAAxB,UAAwB,QAAxB,UAAwB;AAAA,UAAZ,IAAY,QAAZ,IAAY;2BAA3C,YAAA,CAIK,IAJL,EAIK;AAJ2E,QAAA,GAAG,EAAE;AAIhF,OAJL,EAA0F,CACvD,IAAI,IAAA,K,kBAAnC,YAAA,CAA+K,GAA/K,EAA+K;cAAA;AAA5K,QAAA,KAAK,EAAC,eAAsK;AAAhI,QAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,OAAA,CAAQ,UAAR,EAAoB,IAAI,CAAA,IAAA,CAAxB,EAAgC,UAAU,CAAC,OAA3C,EAAoD,MAAM,CAAC,aAA3D,EAAwE,MAAxE,CAAF;AAAA,SAA2H;AAAtC,QAAA,KAAuB,EAAvB;AAAA,oBAAA;AAAA;AAAsC,OAA/K,E,iBAAoK,I,CAApK,EAAwK;AAAA;AAAxK,QAAwK,CAAA,SAAA,CAAxK,C,qCADsF,EAGvD,IAAI,IAAA,O,kBAAnC,YAAA,CAA6H,GAA7H,EAA6H;cAAA;AAA1H,QAAA,KAAK,EAAC,eAAoH;AAA7E,QAAA,KAAuB,EAAvB;AAAA,oBAAA;AAAA,SAA6E;AAApD,QAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,WAAA,CAAY,IAAZ,EAAkB,UAAlB,CAAF;AAAA;AAA+C,OAA7H,E,iBAAkH,I,CAAlH,EAAsH;AAAA;AAAtH,QAAsH,CAAA,SAAA,CAAtH,C,qCAHsF,CAA1F,C;KAIK,CAJL,E;;AAAA,KAKC,EANL,CAOC,CAVL,C,qCALyC,CAA7C,C;GAgBK,CAhBL,E;;AAAA,GAiBI,EAlBR,CAmBI,CA9BR,CA+BE,CAlCN,CAmCE,CApCN,C,EAsCA,YAAA,CA+BM,KA/BN,EAAA,WAAA,EA+BM,CA9BF,YAAA,CAGM,KAHN,EAAA,WAAA,EAGM,CAFF,YAAA,CAA6D,OAA7D,EAAA,WAAA,EAAkC,MAAC,gBAAA,CAAG,KAAA,CAAA,MAAH,CAAD,GAAa,QAA/C,EAAqD;AAAA;AAArD,GAEE,EADF,YAAA,CAA+E,OAA/E,EAAA,WAAA,EAA+E,gBAAA,CAAhC,KAAA,CAAA,MAAgC,CAAA,GAAvB,iBAAxD,EAAuE;AAAA;AAAvE,GACE,CAHN,CA8BE,G,kBAzBF,YAAA,CAwBM,SAxBN,EAwBM,IAxBN,EAwBM,WAAA,CAxB8C,KAAA,CAAA,IAwB9C,EAxBkD,UAApB,IAAoB,EAAd,KAAc,EAAT;yBAA/C,YAAA,CAwBM,KAxBN,EAwBM;AAxBD,MAAA,KAAK,EAAC,gBAwBL;AAxBqD,MAAA,GAAG,EAAE;AAwB1D,KAxBN,E,CACI,YAAA,CAsBM,KAtBN,EAAA,WAAA,EAsBM,CArBF,YAAA,CAGM,KAHN,EAAA,WAAA,EAGM,CAFF,YAAA,CAAkD,GAAlD,EAAA,WAAA,EAAkD,gBAAA,CAAlB,KAAK,GAAA,CAAa,CAAA,GAAN,IAA5C,EAA8C;AAAA;AAA9C,KAEE,G,kBADF,YAAA,CAAiM,SAAjM,EAAiM,IAAjM,EAAiM,WAAA,CAA7H,KAAA,CAAA,OAA6H,EAAtH,UAAzB,MAAyB,EAAjB,KAAiB,EAAZ;2BAA/D,YAAA,CAAiM,GAAjM,EAAiM;AAA9L,QAAA,KAAK,EAAC,gCAAwL;AAAnH,QAAA,GAAG,EAAE;AAA8G,OAAjM,E,CAA2F,YAAA,CAA+E,MAA/E,EAAA,WAAA,EAA+E,gBAAA,CAAvC,MAAM,CAAC,KAAP,CAAY,GAAZ,EAAkB,IAAlB,CAAsB,GAAtB,CAAuC,CAAA,GAAT,IAAtE,EAAwE;AAAA;AAAxE,O,mBAA+E,MAAC,gBAAA,CAAG,IAAI,CAAC,MAAD,CAAP,C,EAAc;AAAA;QAAzL,C;KAAiM,CAAjM,E;;AAAA,KACE,EAHN,CAqBE,EAjBF,YAAA,CAgBM,KAhBN,EAAA,WAAA,EAgBM,E,kBAfF,YAAA,CAcO,SAdP,EAcO,IAdP,EAcO,WAAA,CAd2C,MAAA,CAAA,WAAA,CAAY,MAAA,CAAA,MAAA,GAAM,CAAlB,EAAsB,OAcjE,EAdwE,iBAAvC,KAAuC,EAAlC;AAAA,UAA9B,IAA8B,SAA9B,IAA8B;AAAA,UAAxB,UAAwB,SAAxB,UAAwB;AAAA,UAAZ,IAAY,SAAZ,IAAY;2BAA7C,YAAA,CAcO,MAdP,EAcO;AAd2E,QAAA,GAAG,EAAE;AAchF,OAdP,EAA4F,CACnC,IAAI,IAAA,O,kBAAzD,YAAA,CAES,QAFT,EAES;cAAA;AAFD,QAAA,KAAK,EAAC,gCAEL;AAF8D,QAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,WAAA,CAAY,IAAZ,EAAkB,UAAlB,CAAF;AAAA;AAEnE,OAFT,E,CACI,YAAA,CAAyC,MAAzC,EAAA,WAAA,EAAyC,gBAAA,CAAd,IAAc,CAAzC,EAA+B;AAAA;AAA/B,O,CADJ,E;;AAAA,Q,WAAA,C,qCADwF,EAK7B,IAAI,IAAA,K,kBAA/D,YAAA,CAQS,QART,EAQS;cAAA;AARD,QAAA,KAAK,EAAC,sCAQL;AARiE,QAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,OAAA,CAAQ,UAAR,EAAoB,IAAI,CAAA,IAAA,CAAxB,EAAgC,UAAU,CAAC,OAA3C,EAAoD,MAAM,CAAC,aAA3D,EAAwE,OAAxE,CAAF;AAAA;AAQtE,OART,E,CACI,YAAA,CAAyC,MAAzC,EAAA,WAAA,EAAyC,gBAAA,CAAd,IAAc,CAAzC,EAA+B;AAAA;AAA/B,O,EAEA,YAAA,CAAmG,4BAAnG,EAAmG;AAAhF,QAAA,KAAK,EAAC,0BAA0E;AAA9C,QAAA,IAAI,EAAE,CAAA,KAAA,EAAA,SAAA;AAAwC,OAAnG,C,EAEA,YAAA,CAAwG,4BAAxG,EAAwG;AAArF,QAAA,KAAK,EAAC,0BAA+E;AAAnD,QAAA,IAAI,EAAE,CAAA,KAAA,EAAA,cAAA;AAA6C,OAAxG,C,EAEA,YAAA,CAAwG,4BAAxG,EAAwG;AAArF,QAAA,KAAK,EAAC,0BAA+E;AAAnD,QAAA,IAAI,EAAE,CAAA,KAAA,EAAA,cAAA;AAA6C,OAAxG,C,CAPJ,E;;AAAA,Q,WAAA,C,qCALwF,CAA5F,C;KAcO,CAdP,E;;AAAA,KAeE,EAhBN,CAiBE,CAtBN,C,CADJ,C;GAwBM,CAxBN,E;;AAAA,GAyBE,EA/BN,C","sourcesContent":["<template>\n    <section-title v-if=\"title.status == true\" :title=title.title :actions=title.actions></section-title>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <status v-model:status_data=status_data></status>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"tables\" class=\"data-lists row\">\n        <div class=\"col-md-12\">\n            <small class=\"text-muted float-end fw-bold\">{{ totals }} records showing</small>\n            \n            <table id=\"table\" class=\"table table-striped mt-4\">\n                <thead class=\"table-dark\">\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th v-for=\"(header, index) in headers\" :key=\"index\" scope=\"col\">\n                            <span class=\"text-capitalize\">{{ header.split('_').join(' ') }}</span>\n                        </th>\n                        <th v-if=\"all_screens[screen-1].actions\">Actions</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr v-for=\"(item, index) in data\" :key=\"index\">\n                        <th scope=\"row\">{{ index + 1 }}</th>\n                        <td class=\"text-capitalize\" v-for=\"(header, index) in headers\" :key=\"index\">{{\n                            item[header] }}</td>\n\n                        <td class=\"dropdown\" v-if=\"all_screens[screen-1].actions\">\n                            <font-awesome-icon :icon=\"['fas', 'ellipsis-h']\" class=\"dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></font-awesome-icon>\n\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                                <li v-for=\"({name, action_url, type}, index) in all_screens[screen-1].actions\" :key=\"index\">\n                                    <a class=\"dropdown-item\" v-if=\"type == 'api'\" @click=\"autoAPI(action_url, item['id'], action_url.message, $event.currentTarget, 'list')\" style=\"cursor: pointer\">{{ name }}</a>\n\n                                    <a class=\"dropdown-item\" v-if=\"type == 'modal'\" style=\"cursor: pointer\" @click=\"setListData(item, action_url)\">{{ name }}</a>\n                                </li>\n                            </ul>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    <div id=\"cards\" class=\"data-lists row mb-3\">\n        <div class=\"col-md-12\">\n            <small class=\"text-muted fw-bold\">+{{ totals }} total</small>\n            <small class=\"text-muted float-end fw-bold\">{{ totals }} records found.</small>\n        </div>\n\n        <div class=\"col-md-12 mt-3\" v-for=\"(item, index) in data\" :key=\"index\">\n            <div class=\"card mb-2 border-0\">\n                <div class=\"card-body pb-0\">\n                    <p class=\"text-dark fw-bold\">{{ index + 1 }}. </p>\n                    <p class=\"text-dark mb-3 text-capitalize\" v-for=\"(header, index) in headers\" :key=\"index\"> <span class=\"fw-bold text-uppercase\">{{ header.split('_').join(' ') }}: </span> {{ item[header] }}</p>\n                </div>\n                <div class=\"card-footer border-0 bg-white\">\n                    <span v-for=\"({name, action_url, type}, index) in all_screens[screen-1].actions\" :key=\"index\" >\n                        <button class=\"btn button default btn-sm mt-1\" v-if=\"type == 'modal'\" @click=\"setListData(item, action_url)\">\n                            <span class=\"ms-2 me-2\">{{ name }}</span>\n                        </button>  \n\n                        <button class=\"btn btn-secondary button btn-sm mt-1\" v-if=\"type =='api'\" @click=\"autoAPI(action_url, item['id'], action_url.message, $event.currentTarget, 'cards')\"> \n                            <span class=\"ms-2 me-2\">{{ name }}</span>\n\n                            <font-awesome-icon class=\"ms-2 icon-loading d-none\" :icon=\"['fas', 'spinner']\"></font-awesome-icon>\n                            \n                            <font-awesome-icon class=\"ms-2 icon-success d-none\" :icon=\"['fas', 'check-circle']\"></font-awesome-icon>\n\n                            <font-awesome-icon class=\"ms-2 icon-failure d-none\" :icon=\"['fas', 'times-circle']\"></font-awesome-icon>\n                        </button>         \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../assets/scss/layout/_lists.scss';\n</style>\n\n<script>\n\nimport SectionTitle from'../components/SectionTitle';    \nimport Status from '../components/Status';\nimport {Modal} from 'bootstrap'\nimport statusButtons from '../mixins/statusButtons';\n\nexport default {\n    name: 'AutoList',\n    mixins: [statusButtons],\n    props: {\n        title: {\n            type: Object,\n            required: true\n        },\n        url: {\n            type: String,\n            required: true\n        },\n        all_screens: {\n            required: true,\n            type: Object\n        },\n        screen: {\n            required: true,\n            type: Number\n        },\n        list_data: {\n            required: true,\n            type: Array\n        }\n    },\n    components: {\n        SectionTitle,    \n        Status\n    },\n    mounted() {\n        this.getDatabyPage()\n    },\n    data (){\n        return {\n            data: [],\n            totals: 0,\n            headers: [],\n            status_data: {\n                \"success\": false,\n                \"success_message\": null,\n                \"error\": false,\n                \"error_message\": null,\n                \"loading\": false\n            },\n            modalElem: null,\n        }\n    },\n    watch: {\n        url: function() {\n            this.getDatabyPage()\n            this.hidePrevious = true\n            this.hideNext = false\n            this.page = 0\n            this.filterUrl()\n        },\n        list_data: function() {\n            this.data = this.list_data\n        }\n    },\n    methods: {\n        getDatabyPage() {\n            this.axios.get(this.url).then((response) => {\n                this.data = response.data.data\n                this.$emit('update:list_data', response.data.data)\n\n                this.headers = response.data.headers\n                this.totals = response.data.totals\n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n            }).catch((error) => {\n                this.error = error\n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n            })\n        },\n        setListData(data, action_url) {\n            this.$store.dispatch(\"getModalList\", data)\n            this.modalElem = new Modal(document.getElementById(action_url))\n            this.modalElem.show()\n        },\n        autoAPI(url, id, message, event, display_type) {\n            this.status_data.loading = true\n\n            if(display_type == 'cards') {\n                this.loadingButton(event)\n            }\n\n            this.axios[url.type](url.url + id).then(() => {\n                this.status_data.loading = false\n                this.status_data.error = false\n                this.status_data.success = true\n                this.status_data.success_message = message.success\n\n                if(display_type == 'cards') {\n                    this.successButton(event)\n                    setTimeout(() => (this.defaultButton(event, 'success')), 2000)\n                }\n\n                setTimeout(() => (this.status_data.success = false), 2000)\n                this.getDatabyPage() \n            }).catch((error) => {\n                this.status_data.loading = false\n                this.status_data.error = true\n                this.status_data.success = false\n                this.status_data.error_message = message.error\n                \n                if(display_type == 'cards') {\n                    this.errorButton(event)\n                }\n\n                console.log(error);\n            })\n        },    \n    }\n}\n</script>"],"sourceRoot":""}]}