{"remainingRequest":"/home/october/Documents/code/solutech/front/node_modules/babel-loader/lib/index.js!/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/solutech/front/src/components/AutoList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/october/Documents/code/solutech/front/src/components/AutoList.vue","mtime":1648809842701},{"path":"/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/solutech/front/node_modules/babel-loader/lib/index.js","mtime":1630502822507},{"path":"/home/october/Documents/code/solutech/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/solutech/front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0IFNlY3Rpb25UaXRsZSBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb25UaXRsZSc7CmltcG9ydCBTdGF0dXMgZnJvbSAnLi4vY29tcG9uZW50cy9TdGF0dXMnOwppbXBvcnQgeyBNb2RhbCB9IGZyb20gJ2Jvb3RzdHJhcCc7CmltcG9ydCBzdGF0dXNCdXR0b25zIGZyb20gJy4uL21peGlucy9zdGF0dXNCdXR0b25zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBdXRvTGlzdCcsCiAgbWl4aW5zOiBbc3RhdHVzQnV0dG9uc10sCiAgcHJvcHM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICB1cmw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGFsbF9zY3JlZW5zOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICBzY3JlZW46IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IE51bWJlcgogICAgfSwKICAgIGxpc3RfZGF0YTogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogQXJyYXkKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFNlY3Rpb25UaXRsZTogU2VjdGlvblRpdGxlLAogICAgU3RhdHVzOiBTdGF0dXMKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldERhdGFieVBhZ2UoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBbXSwKICAgICAgdG90YWxzOiAwLAogICAgICBoZWFkZXJzOiBbXSwKICAgICAgc3RhdHVzX2RhdGE6IHsKICAgICAgICAic3VjY2VzcyI6IGZhbHNlLAogICAgICAgICJzdWNjZXNzX21lc3NhZ2UiOiBudWxsLAogICAgICAgICJlcnJvciI6IGZhbHNlLAogICAgICAgICJlcnJvcl9tZXNzYWdlIjogbnVsbCwKICAgICAgICAibG9hZGluZyI6IGZhbHNlCiAgICAgIH0sCiAgICAgIG1vZGFsRWxlbTogbnVsbAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICB1cmw6IGZ1bmN0aW9uIHVybCgpIHsKICAgICAgdGhpcy5nZXREYXRhYnlQYWdlKCk7CiAgICAgIHRoaXMuaGlkZVByZXZpb3VzID0gdHJ1ZTsKICAgICAgdGhpcy5oaWRlTmV4dCA9IGZhbHNlOwogICAgICB0aGlzLnBhZ2UgPSAwOwogICAgICB0aGlzLmZpbHRlclVybCgpOwogICAgfSwKICAgIGxpc3RfZGF0YTogZnVuY3Rpb24gbGlzdF9kYXRhKCkgewogICAgICB0aGlzLmRhdGEgPSB0aGlzLmxpc3RfZGF0YTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGFieVBhZ2U6IGZ1bmN0aW9uIGdldERhdGFieVBhZ2UoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmF4aW9zLmdldCh0aGlzLnVybCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5kYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhOwoKICAgICAgICBfdGhpcy4kZW1pdCgndXBkYXRlOmxpc3RfZGF0YScsIHJlc3BvbnNlLmRhdGEuZGF0YSk7CgogICAgICAgIF90aGlzLmhlYWRlcnMgPSByZXNwb25zZS5kYXRhLmhlYWRlcnM7CiAgICAgICAgX3RoaXMudG90YWxzID0gcmVzcG9uc2UuZGF0YS50b3RhbHM7CiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRhdGEtbGlzdHMnKS5zY3JvbGxJbnRvVmlldyh7CiAgICAgICAgICBiZWhhdmlvcjogInNtb290aCIKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgX3RoaXMuZXJyb3IgPSBlcnJvcjsKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGF0YS1saXN0cycpLnNjcm9sbEludG9WaWV3KHsKICAgICAgICAgIGJlaGF2aW9yOiAic21vb3RoIgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBzZXRMaXN0RGF0YTogZnVuY3Rpb24gc2V0TGlzdERhdGEoZGF0YSwgYWN0aW9uX3VybCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZ2V0TW9kYWxMaXN0IiwgZGF0YSk7CiAgICAgIHRoaXMubW9kYWxFbGVtID0gbmV3IE1vZGFsKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGFjdGlvbl91cmwpKTsKICAgICAgdGhpcy5tb2RhbEVsZW0uc2hvdygpOwogICAgfSwKICAgIGF1dG9BUEk6IGZ1bmN0aW9uIGF1dG9BUEkodXJsLCBpZCwgbWVzc2FnZSwgZXZlbnQsIGRpc3BsYXlfdHlwZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuc3RhdHVzX2RhdGEubG9hZGluZyA9IHRydWU7CgogICAgICBpZiAoZGlzcGxheV90eXBlID09ICdjYXJkcycpIHsKICAgICAgICB0aGlzLmxvYWRpbmdCdXR0b24oZXZlbnQpOwogICAgICB9CgogICAgICB0aGlzLmF4aW9zW3VybC50eXBlXSh1cmwudXJsICsgaWQpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5zdGF0dXNfZGF0YS5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXMyLnN0YXR1c19kYXRhLmVycm9yID0gZmFsc2U7CiAgICAgICAgX3RoaXMyLnN0YXR1c19kYXRhLnN1Y2Nlc3MgPSB0cnVlOwogICAgICAgIF90aGlzMi5zdGF0dXNfZGF0YS5zdWNjZXNzX21lc3NhZ2UgPSBtZXNzYWdlLnN1Y2Nlc3M7CgogICAgICAgIGlmIChkaXNwbGF5X3R5cGUgPT0gJ2NhcmRzJykgewogICAgICAgICAgX3RoaXMyLnN1Y2Nlc3NCdXR0b24oZXZlbnQpOwoKICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMyLmRlZmF1bHRCdXR0b24oZXZlbnQsICdzdWNjZXNzJyk7CiAgICAgICAgICB9LCAyMDAwKTsKICAgICAgICB9CgogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIF90aGlzMi5zdGF0dXNfZGF0YS5zdWNjZXNzID0gZmFsc2U7CiAgICAgICAgfSwgMjAwMCk7CgogICAgICAgIF90aGlzMi5nZXREYXRhYnlQYWdlKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIF90aGlzMi5zdGF0dXNfZGF0YS5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXMyLnN0YXR1c19kYXRhLmVycm9yID0gdHJ1ZTsKICAgICAgICBfdGhpczIuc3RhdHVzX2RhdGEuc3VjY2VzcyA9IGZhbHNlOwogICAgICAgIF90aGlzMi5zdGF0dXNfZGF0YS5lcnJvcl9tZXNzYWdlID0gbWVzc2FnZS5lcnJvcjsKCiAgICAgICAgaWYgKGRpc3BsYXlfdHlwZSA9PSAnY2FyZHMnKSB7CiAgICAgICAgICBfdGhpczIuZXJyb3JCdXR0b24oZXZlbnQpOwogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/october/Documents/code/solutech/front/src/components/AutoList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section-title v-if=\"title.status == true\" :title=title.title :actions=title.actions></section-title>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <status v-model:status_data=status_data></status>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"tables\" class=\"data-lists row\">\n        <div class=\"col-md-12\">\n            <small class=\"text-muted float-end fw-bold\">{{ totals }} records showing</small>\n            \n            <table id=\"table\" class=\"table table-striped mt-4\">\n                <thead class=\"table-dark\">\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th v-for=\"(header, index) in headers\" :key=\"index\" scope=\"col\">\n                            <span class=\"text-capitalize\">{{ header.split('_').join(' ') }}</span>\n                        </th>\n                        <th v-if=\"all_screens[screen-1].actions\">Actions</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr v-for=\"(item, index) in data\" :key=\"index\">\n                        <th scope=\"row\">{{ index + 1 }}</th>\n                        <td class=\"text-capitalize\" v-for=\"(header, index) in headers\" :key=\"index\">{{\n                            item[header] }}</td>\n\n                        <td class=\"dropdown\" v-if=\"all_screens[screen-1].actions\">\n                            <font-awesome-icon :icon=\"['fas', 'ellipsis-h']\" class=\"dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></font-awesome-icon>\n\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                                <li v-for=\"({name, action_url, type}, index) in all_screens[screen-1].actions\" :key=\"index\">\n                                    <a class=\"dropdown-item\" v-if=\"type == 'api'\" @click=\"autoAPI(action_url, item['id'], action_url.message, $event.currentTarget, 'list')\" style=\"cursor: pointer\">{{ name }}</a>\n\n                                    <a class=\"dropdown-item\" v-if=\"type == 'modal'\" style=\"cursor: pointer\" @click=\"setListData(item, action_url)\">{{ name }}</a>\n                                </li>\n                            </ul>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    <div id=\"cards\" class=\"data-lists row mb-3\">\n        <div class=\"col-md-12\">\n            <small class=\"text-muted fw-bold\">+{{ totals }} total</small>\n            <small class=\"text-muted float-end fw-bold\">{{ totals }} records found.</small>\n        </div>\n\n        <div class=\"col-md-12 mt-3\" v-for=\"(item, index) in data\" :key=\"index\">\n            <div class=\"card mb-2 border-0\">\n                <div class=\"card-body pb-0\">\n                    <p class=\"text-dark fw-bold\">{{ index + 1 }}. </p>\n                    <p class=\"text-dark mb-3 text-capitalize\" v-for=\"(header, index) in headers\" :key=\"index\"> <span class=\"fw-bold text-uppercase\">{{ header.split('_').join(' ') }}: </span> {{ item[header] }}</p>\n                </div>\n                <div class=\"card-footer border-0 bg-white\">\n                    <span v-for=\"({name, action_url, type}, index) in all_screens[screen-1].actions\" :key=\"index\" >\n                        <button class=\"btn button default btn-sm mt-1\" v-if=\"type == 'modal'\" @click=\"setListData(item, action_url)\">\n                            <span class=\"ms-2 me-2\">{{ name }}</span>\n                        </button>  \n\n                        <button class=\"btn btn-secondary button btn-sm mt-1\" v-if=\"type =='api'\" @click=\"autoAPI(action_url, item['id'], action_url.message, $event.currentTarget, 'cards')\"> \n                            <span class=\"ms-2 me-2\">{{ name }}</span>\n\n                            <font-awesome-icon class=\"ms-2 icon-loading d-none\" :icon=\"['fas', 'spinner']\"></font-awesome-icon>\n                            \n                            <font-awesome-icon class=\"ms-2 icon-success d-none\" :icon=\"['fas', 'check-circle']\"></font-awesome-icon>\n\n                            <font-awesome-icon class=\"ms-2 icon-failure d-none\" :icon=\"['fas', 'times-circle']\"></font-awesome-icon>\n                        </button>         \n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../assets/scss/layout/_lists.scss';\n</style>\n\n<script>\n\nimport SectionTitle from'../components/SectionTitle';    \nimport Status from '../components/Status';\nimport {Modal} from 'bootstrap'\nimport statusButtons from '../mixins/statusButtons';\n\nexport default {\n    name: 'AutoList',\n    mixins: [statusButtons],\n    props: {\n        title: {\n            type: Object,\n            required: true\n        },\n        url: {\n            type: String,\n            required: true\n        },\n        all_screens: {\n            required: true,\n            type: Object\n        },\n        screen: {\n            required: true,\n            type: Number\n        },\n        list_data: {\n            required: true,\n            type: Array\n        }\n    },\n    components: {\n        SectionTitle,    \n        Status\n    },\n    mounted() {\n        this.getDatabyPage()\n    },\n    data (){\n        return {\n            data: [],\n            totals: 0,\n            headers: [],\n            status_data: {\n                \"success\": false,\n                \"success_message\": null,\n                \"error\": false,\n                \"error_message\": null,\n                \"loading\": false\n            },\n            modalElem: null,\n        }\n    },\n    watch: {\n        url: function() {\n            this.getDatabyPage()\n            this.hidePrevious = true\n            this.hideNext = false\n            this.page = 0\n            this.filterUrl()\n        },\n        list_data: function() {\n            this.data = this.list_data\n        }\n    },\n    methods: {\n        getDatabyPage() {\n            this.axios.get(this.url).then((response) => {\n                this.data = response.data.data\n                this.$emit('update:list_data', response.data.data)\n\n                this.headers = response.data.headers\n                this.totals = response.data.totals\n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n            }).catch((error) => {\n                this.error = error\n                document.querySelector('.data-lists').scrollIntoView({behavior: \"smooth\"})\n            })\n        },\n        setListData(data, action_url) {\n            this.$store.dispatch(\"getModalList\", data)\n            this.modalElem = new Modal(document.getElementById(action_url))\n            this.modalElem.show()\n        },\n        autoAPI(url, id, message, event, display_type) {\n            this.status_data.loading = true\n\n            if(display_type == 'cards') {\n                this.loadingButton(event)\n            }\n\n            this.axios[url.type](url.url + id).then(() => {\n                this.status_data.loading = false\n                this.status_data.error = false\n                this.status_data.success = true\n                this.status_data.success_message = message.success\n\n                if(display_type == 'cards') {\n                    this.successButton(event)\n                    setTimeout(() => (this.defaultButton(event, 'success')), 2000)\n                }\n\n                setTimeout(() => (this.status_data.success = false), 2000)\n                this.getDatabyPage() \n            }).catch((error) => {\n                this.status_data.loading = false\n                this.status_data.error = true\n                this.status_data.success = false\n                this.status_data.error_message = message.error\n                \n                if(display_type == 'cards') {\n                    this.errorButton(event)\n                }\n\n                console.log(error);\n            })\n        },    \n    }\n}\n</script>"],"sourceRoot":""}]}