{"remainingRequest":"/home/october/Documents/code/inshaka/front/node_modules/babel-loader/lib/index.js!/home/october/Documents/code/inshaka/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/october/Documents/code/inshaka/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/inshaka/front/src/components/SmallAdminHeader.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/october/Documents/code/inshaka/front/src/components/SmallAdminHeader.vue","mtime":1627547607080},{"path":"/home/october/Documents/code/inshaka/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/inshaka/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/october/Documents/code/inshaka/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/inshaka/front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0IE5hdmJhciBmcm9tICcuLi9jb21wb25lbnRzL05hdmJhcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU21hbGxBZG1pbkhlYWRlciIsCiAgcHJvcHM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICB0YWdsaW5lOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBzY3JlZW46IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IE51bWJlcgogICAgfSwKICAgIGlmX3NjcmVlbnM6IHsKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICB0eXBlOiBCb29sZWFuCiAgICB9LAogICAgYWxsX3NjcmVlbnM6IHsKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICB0eXBlOiBPYmplY3QKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE5hdmJhcjogTmF2YmFyCiAgfSwKICBtZXRob2RzOiB7CiAgICBzd2l0Y2hTY3JlZW46IGZ1bmN0aW9uIHN3aXRjaFNjcmVlbih2YWx1ZSkgewogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2NyZWVuJywgdmFsdWUpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/october/Documents/code/inshaka/front/src/components/SmallAdminHeader.vue"],"names":[],"mappings":";AAoCA,OAAO,MAAP,MAAmB,sBAAnB;AAGA,eAAe;AACX,EAAA,IAAI,EAAE,kBADK;AAEX,EAAA,KAAK,EAAE;AACH,IAAA,KAAK,EAAE;AACH,MAAA,QAAQ,EAAE,IADP;AAEH,MAAA,IAAI,EAAE;AAFH,KADJ;AAKH,IAAA,OAAO,EAAE;AACL,MAAA,QAAQ,EAAE,IADL;AAEL,MAAA,IAAI,EAAE;AAFD,KALN;AASH,IAAA,MAAM,EAAE;AACJ,MAAA,QAAQ,EAAE,IADN;AAEJ,MAAA,IAAI,EAAE;AAFF,KATL;AAaH,IAAA,UAAU,EAAE;AACR,MAAA,QAAQ,EAAE,KADF;AAER,MAAA,IAAI,EAAE;AAFE,KAbT;AAiBH,IAAA,WAAW,EAAE;AACT,MAAA,QAAQ,EAAE,KADD;AAET,MAAA,IAAI,EAAE;AAFG;AAjBV,GAFI;AAwBX,EAAA,UAAU,EAAE;AACR,IAAA,MAAK,EAAL;AADQ,GAxBD;AA2BX,EAAA,OAAO,EAAE;AACL,IAAA,YADK,wBACQ,KADR,EACe;AAChB,WAAK,KAAL,CAAW,eAAX,EAA4B,KAA5B;AACJ;AAHK;AA3BE,CAAf","sourcesContent":["<template>\n    <section class=\"small-admin-header bg-default\">\n\n        <navbar :background_color=\"'transparent'\" style=\"margin-bottom: 3rem\"></navbar>\n\n        <div class=\"title text-center\">\n            <h3 class=\"fw-bold text-white\">{{ title }}</h3>\n            <p class=\"text-white\">{{ tagline }}</p>\n        </div>\n\n        <div class=\"container\">\n            <div class=\"row\">\n                <ul class=\"col-12 nav\">\n                    <div class=\"d-flex mx-auto\">\n                        <li class=\"nav-item\" v-for=\"({title}, index) in all_screens\" :key=index>\n                            <a :class=\"['nav-link', 'text-white', 'text-uppercase', {'active' : screen == index + 1 }]\" @click=\"switchScreen(index + 1)\">{{ title }}</a>\n                        </li>\n                    </div>\n                </ul>\n            </div>\n        </div>\n\n       \n    </section>\n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../assets/scss/layout/_admin_header.scss';\n    \n    .breadcrumbs {\n        box-shadow: 0 1px 5px 0 rgb(0 0 0 / 15%);\n    }\n    \n</style>\n\n<script>\nimport Navbar from '../components/Navbar'\n\n\nexport default {\n    name: \"SmallAdminHeader\",\n    props: {\n        title: {\n            required: true,\n            type: String\n        },\n        tagline: {\n            required: true,\n            type: String\n        },\n        screen: {\n            required: true,\n            type: Number\n        },\n        if_screens: {\n            required: false,\n            type: Boolean\n        },\n        all_screens: {\n            required: false,\n            type: Object\n        }\n    },\n    components: {\n        Navbar\n    },\n    methods: {\n        switchScreen(value) {\n            this.$emit('update:screen', value)\n        }\n    },\n    \n}\n</script>"],"sourceRoot":""}]}