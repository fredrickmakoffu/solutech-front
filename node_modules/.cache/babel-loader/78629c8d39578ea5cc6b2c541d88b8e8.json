{"remainingRequest":"/home/october/Documents/code/kipekee-front/node_modules/thread-loader/dist/cjs.js!/home/october/Documents/code/kipekee-front/node_modules/babel-loader/lib/index.js!/home/october/Documents/code/kipekee-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/october/Documents/code/kipekee-front/src/components/AutoStats.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/october/Documents/code/kipekee-front/src/components/AutoStats.vue","mtime":1630502799983},{"path":"/home/october/Documents/code/kipekee-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/thread-loader/dist/cjs.js","mtime":1630502843336},{"path":"/home/october/Documents/code/kipekee-front/node_modules/babel-loader/lib/index.js","mtime":1630502822507},{"path":"/home/october/Documents/code/kipekee-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/october/Documents/code/kipekee-front/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBdXRvU3RhdHMnLAogIHByb3BzOiB7CiAgICBzdGF0c19kYXRhOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBPYmplY3QKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGZvcm1hdE51bWJlcjogZnVuY3Rpb24gZm9ybWF0TnVtYmVyKG51bSkgewogICAgICByZXR1cm4gbnVtLnRvU3RyaW5nKCkucmVwbGFjZSgvKFxkKSg/PShcZHszfSkrKD8hXGQpKS9nLCAnJDEsJyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/october/Documents/code/kipekee-front/src/components/AutoStats.vue"],"names":[],"mappings":";;;;AA2BA,eAAe;AACX,EAAA,IAAI,EAAE,WADK;AAEX,EAAA,KAAK,EAAE;AACH,IAAA,UAAU,EAAE;AACR,MAAA,QAAQ,EAAE,IADF;AAER,MAAA,IAAI,EAAE;AAFE;AADT,GAFI;AAQX,EAAA,OAAO,EAAE;AACL,IAAA,YADK,wBACS,GADT,EACc;AACf,aAAO,GAAG,CAAC,QAAJ,GAAe,OAAf,CAAuB,yBAAvB,EAAkD,KAAlD,CAAP;AACJ;AAHK;AARE,CAAf","sourcesContent":["<template>\n    <div class=\"all-stats\">\n        <div class=\"row gx-2\">\n            <div class=\"col-lg-3 col-md-3 col-sm-6 mb-2\" v-for=\"({title, value, icon, color, index}) in stats_data\" :key=\"index\">\n                <div :class='[\"card\", \"stats\", color]'>\n                    <div class=\"card-body\">\n                        <div class=\"d-flex\">\n                            <span class=\"card-icon\"> \n                                <font-awesome-icon class=\"icon\" :icon=\"['fa', icon]\" /> \n                            </span>\n\n                            <h3 class=\"fw-bold mt-auto mb-auto ms-4\">{{ formatNumber(value) }}</h3>\n                        </div>\n                        <p class=\"card-icon-title mt-2\">{{ title }}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>    \n</template>\n\n<style lang=\"scss\" scoped>\n    @import '../assets/scss/layout/_stats.scss';\n</style>\n\n\n<script>\nexport default {\n    name: 'AutoStats',\n    props: {\n        stats_data: {\n            required: true,\n            type: Object\n        }\n    },\n    methods: {\n        formatNumber (num) {\n            return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}